{"version":3,"sources":["components/memoryWall/memoryWall.tsx","model/houseguest.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["componentToHex","c","hex","Math","round","toString","length","MemoryWall","props","react_default","a","createElement","className","houseguests","rows","forEach","houseguest","r","g","b","evictedImageURL","profileData","imageSrc","isEvicted","imageURL","imageClass","percent","popularity","backgroundColor","undefined","maxPopularity","minPopularity","push","key","name","style","concat","src","width","height","getPlayers","Houseguest","init","Object","classCallCheck","this","isJury","random","stats","str","int","dex","will","luck","memory","App","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8a315e8f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./memoryWall.scss\";\r\nimport { Houseguest } from \"../../model/houseguest\";\r\nexport interface IMemoryWallProps {\r\n  readonly houseguests: Houseguest[];\r\n}\r\n\r\nfunction componentToHex(c: any) {\r\n  var hex = Math.round(c).toString(16);\r\n  return hex.length == 1 ? \"0\" + hex : hex;\r\n}\r\n\r\nfunction rgbToHex(r: any, g: any, b: any) {\r\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\nexport function MemoryWall(props: IMemoryWallProps): JSX.Element {\r\n  return <div className=\"box memory-wall\">{getPlayers(props)}</div>;\r\n}\r\n\r\nconst maxPopularity = { r: 137, g: 252, b: 137 };\r\nconst minPopularity = { r: 252, g: 137, b: 137 };\r\n\r\n// TODO: make portrait its own functional component\r\n\r\nfunction getPlayers(props: IMemoryWallProps): any {\r\n  if (!props.houseguests || props.houseguests.length === 0) {\r\n    return null;\r\n  }\r\n  const rows: JSX.Element[] = [];\r\n  props.houseguests.forEach(houseguest => {\r\n    const evictedImageURL = houseguest.profileData.evictedImageURL;\r\n    const imageSrc =\r\n      houseguest.isEvicted && evictedImageURL !== \"BW\"\r\n        ? evictedImageURL\r\n        : houseguest.profileData.imageURL;\r\n\r\n    const imageClass =\r\n      houseguest.isEvicted && evictedImageURL === \"BW\" ? \"grayscale\" : \"\";\r\n\r\n    const percent = (houseguest.popularity + 1) / 2;\r\n    const backgroundColor = houseguest.isEvicted\r\n      ? undefined\r\n      : rgbToHex(\r\n          maxPopularity.r + percent * (minPopularity.r - maxPopularity.r),\r\n          maxPopularity.g + percent * (minPopularity.g - maxPopularity.g),\r\n          maxPopularity.b + percent * (minPopularity.b - maxPopularity.b)\r\n        );\r\n\r\n    rows.push(\r\n      <div\r\n        key={houseguest.profileData.name}\r\n        style={{\r\n          backgroundColor\r\n        }}\r\n        className={`memory-wall-portrait ${\r\n          houseguest.isEvicted ? \"evicted\" : \"\"\r\n        }`}\r\n      >\r\n        <img\r\n          className={imageClass}\r\n          src={imageSrc}\r\n          style={{ width: 100, height: 100 }}\r\n        />\r\n        <br />\r\n        {houseguest.profileData.name}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"columns is-gapless is-mobile is-multiline is-centered\">\r\n      {rows}\r\n    </div>\r\n  );\r\n}\r\n","import { PlayerProfile } from \"./playerProfile\";\r\n\r\nexport class Houseguest {\r\n  readonly profileData: PlayerProfile;\r\n  public isEvicted: boolean = false;\r\n  public isJury: boolean = false;\r\n  // Popularity ranges from -1 to 1 TODO: fixed at zero\r\n  public popularity: number = Math.random() * 2 - 1;\r\n  // relationships?\r\n  // descision making functions...\r\n\r\n  constructor(init: PlayerProfile) {\r\n    this.profileData = init;\r\n    this.isEvicted = Math.random() > 0.4;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { MemoryWall } from \"./components/memoryWall/memoryWall\";\r\nimport { Houseguest } from \"./model/houseguest\";\r\n\r\nconst stats = {\r\n  str: 0,\r\n  int: 1,\r\n  dex: 2,\r\n  will: 3,\r\n  luck: 5,\r\n  memory: 500\r\n};\r\n\r\nconst evictedImageURL = \"BW\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <MemoryWall\r\n            houseguests={[\r\n              new Houseguest({\r\n                name: \"Shawn\",\r\n                imageURL: \"https://i.ibb.co/1GjNdN7/linkedin.jpg\",\r\n                evictedImageURL,\r\n                stats\r\n              }),\r\n              new Houseguest({\r\n                name: \"Uncle Grug\",\r\n                imageURL: \"https://i.ibb.co/y6yYxcX/uncle-grug.jpg\",\r\n                evictedImageURL,\r\n                stats\r\n              }),\r\n              new Houseguest({\r\n                name: \"Brian\",\r\n                imageURL: \"https://i.ibb.co/k18Zb6v/brian.jpg\",\r\n                evictedImageURL,\r\n                stats\r\n              }),\r\n              new Houseguest({\r\n                name: \"Akane Owari\",\r\n                imageURL:\r\n                  \"https://raw.githubusercontent.com/YKG123/imagesource/master/DanganRonpa/IMG/2/Akane_Owari.png\",\r\n                evictedImageURL,\r\n                stats\r\n              }),\r\n              new Houseguest({\r\n                name: \"Ronnie\",\r\n                imageURL: \"https://i.ibb.co/1GGgqWk/ronny.jpg\",\r\n                evictedImageURL,\r\n                stats\r\n              }),\r\n              new Houseguest({\r\n                name: \"Triangle Zodiac\",\r\n                imageURL: \"https://i.ibb.co/yf55ncJ/triangle.jpg\",\r\n                evictedImageURL,\r\n                stats\r\n              }),\r\n              new Houseguest({\r\n                name: \"Judge Brown\",\r\n                imageURL: \"https://i.ibb.co/SryCtL6/judge-brown.jpg\",\r\n                evictedImageURL,\r\n                stats\r\n              }),\r\n              new Houseguest({\r\n                name: \"Bryce\",\r\n                imageURL: \"https://i.ibb.co/YQrYLzp/frie-nd.jpg\",\r\n                evictedImageURL,\r\n                stats\r\n              }),\r\n              new Houseguest({\r\n                name: \"Samsora\",\r\n                imageURL: \"https://i.ibb.co/f9Ngmgj/samsso.jpg\",\r\n                evictedImageURL,\r\n                stats\r\n              }),\r\n              new Houseguest({\r\n                name: \"The Rock\",\r\n                imageURL: \"https://i.ibb.co/mR56Ymb/rock.jpg\",\r\n                evictedImageURL,\r\n                stats\r\n              }),\r\n              new Houseguest({\r\n                name: \"Oz\",\r\n                imageURL: \"https://i.ibb.co/2h7M382/australian.jpg\",\r\n                evictedImageURL,\r\n                stats\r\n              }),\r\n              new Houseguest({\r\n                name: \"Elinda\",\r\n                imageURL: \"https://i.ibb.co/PCs87bN/granny.jpg\",\r\n                evictedImageURL,\r\n                stats\r\n              }),\r\n              new Houseguest({\r\n                name: \"Marth\",\r\n                imageURL: \"https://i.ibb.co/j5P82xQ/marth.jpg\",\r\n                evictedImageURL,\r\n                stats\r\n              }),\r\n              new Houseguest({\r\n                name: \"mmmmmmmmmmmmmmmmmmmmmmmm\",\r\n                imageURL: \"https://i.ibb.co/wNmVRJ5/honistia.jpg\",\r\n                evictedImageURL,\r\n                stats\r\n              }),\r\n              new Houseguest({\r\n                name: \"Sponge\",\r\n                imageURL: \"https://i.ibb.co/zrpwcbj/nohair.jpg\",\r\n                evictedImageURL,\r\n                stats\r\n              }),\r\n              new Houseguest({\r\n                name: \"Scamantha\",\r\n                imageURL: \"https://i.ibb.co/zXZ0t99/chinese.jpg\",\r\n                evictedImageURL,\r\n                stats\r\n              }),\r\n              new Houseguest({\r\n                name: \"Miss Match\",\r\n                imageURL: \"https://i.ibb.co/K9v84pV/hehadband.jpg\",\r\n                evictedImageURL,\r\n                stats\r\n              }),\r\n              new Houseguest({\r\n                name: \"Wakasagihime Shinmyoumaru\",\r\n                imageURL: \"https://i.ibb.co/CP2q4qH/bbbq.jpg\",\r\n                evictedImageURL,\r\n                stats\r\n              })\r\n            ]}\r\n          />\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}