{"version":3,"sources":["model/playerProfile.ts","model/houseguest.ts","utils/utilities.ts","utils/relationshipMap.ts","components/mainPage/mainPageController.ts","utils/BbRandomGenerator.ts","components/playerPortrait/houseguestPortraitController.ts","components/playerPortrait/selectedPortrait.ts","components/playerPortrait/houseguestPortrait.tsx","components/playerPortrait/subtitle.tsx","components/playerPortrait/houseguestToPortrait.tsx","components/playerPortrait/portraits.tsx","components/memoryWall/memoryWall.tsx","components/playerPortrait/setupPortrait.tsx","components/castingScreen/importLinks.tsx","model/episode/pregameEpisode.tsx","components/castingScreen/castingScreen.tsx","components/topbar/topBar.tsx","components/pregameScreen/pregameScreen.tsx","components/mainPage/mainContentArea.tsx","components/sidebar/sidebarController.ts","components/buttons/nextEpisodeButton.tsx","utils/aiUtils.ts","model/gameState.ts","model/season.ts","model/episode/bigBrotherEpisode.tsx","model/episode/bigBrotherFinale.tsx","utils/heap.ts","model/episode/episodeFactory.ts","model/episode/episodes.tsx","components/sidebar/sidebar.tsx","components/mainPage/mainPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["PlayerProfile","init","Object","classCallCheck","this","name","imageURL","evictedImageURL","assign","Houseguest","_PlayerProfile","_this","possibleConstructorReturn","getPrototypeOf","call","isEvicted","isJury","id","nominations","hohWins","povWins","popularity","relativeEquity","deltaPopularity","relationships","assertThisInitialized","inherits","roundTwoDigits","number","Math","round","newRelationshipMap","size","exclude","result","i","cast$","BehaviorSubject","getCast","value","MainPageController","view","MainPage","controller","createClass","key","page","BbRandomGenerator","seed","rng","prand","xorshift128plus","_this$rng$next","next","_this$rng$next2","slicedToArray","a","b","_prand$uniformIntDist","uniformIntDistribution","_prand$uniformIntDist2","rng$","maxPopularity","subscribe","cast","castNames","forEach","houseguest","string","hash","length","charCodeAt","hashcode","r","g","minPopularity","selectedColor","componentToHex","c","hex","toString","rgbToHex","backgroundColor","props","percent","x","xSquared","extremeValues","undefined","selectedPlayer$","getSelectedPlayer","HouseguestPortrait","_React$Component","sub","state","_this2","isNullOrUndefined","data","setState","unsubscribe","player","_this3","imageSrc","imageClass","getImageClass","subtitle","generateSubtitle","className","react_default","createElement","onClick","style","concat","src","width","height","React","Component","_generateSubtitle","detailed","popularitySubtitle","deltaPop","statePopularity","getDeltaPopularity","push","compWins","generateDetailedSubtitle","houseguestToPortrait","houseguestPortrait_HouseguestPortrait","Portrait","centered","Portraits","rows","houseguests","memoryWallPortrait","MemoryWall","margin","maxWidth","getPlayers","SetupPortrait","textAlign","onDoubleClick","onDelete","imageUrl","contentEditable","onChange","spellCheck","ImportLinks","text","lines","split","profiles","line","temp","pop","replace","substr","indexOf","onSubmit","event","target","PregameEpisodeType","eliminates","canPlayWith","n","PregameEpisode","gameState","title","scenes","render","type","PregameScreen","CastingScreen","appendProfiles","newState","objectSpread","profile","players","submit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","newCast","mainContentStream$","newEpisode","GameState","stop","handleDrop","files","file","match","lastIndexOf","URL","createObjectURL","newName","splice","_this4","setupPortrait_SetupPortrait","deleteMethod","handleChange","amount","shuffle","slice","_this5","FileDrop","onDrop","importLinks_ImportLinks","random","disabled","getFiles","EditCastLink","castingScreen_CastingScreen","EditSeasonLink","Topbar","marginTop","NextEpisodeButton","MainContentArea","contentStream","content","episodes$","switchEpisode$","Subject","episode","switchSceneRelative","SidebarController","subscriptions","season","Season","selectedEpisode","delta","selectedScene","renderedScenes","targetScene","lastEpisode","episodes","switchToScene","currentGameState","newPlayerCount","nonEvictedHouseguests","nextEpisodeType","whichEpisodeType","renderEpisode","onNewEpisode","scene","index","keyCode","relationship","hero","villain","highestScore","options","callback","highestIndex","Infinity","currentScore","juryEquity","jurors","getJurors","juryWeight","finalJurySize","houseWeight","calculatePopularity","threatScore","juryThreatWeight","remainingPlayers","inJury","actualJurors","multiplier","castEvictionVote","nominees","nominatePlayer","castJuryVote","juror","finalists","BigBrotherVanilla","generateVetoCeremonyScene","initialGameState","HoH","initialNominees","povWinner","povTarget","descisionText","getById","save","threat0","threat1","min","useGoldenVeto","replacementSpeech","nameAReplacement","finalNominees","filter","hg","replacementNom","evictHouseguest","BigBrotherVanillaEpisode","hohCompScene","hoh","nomCeremonyScene","_generateHohCompScene","newGameState","MutableGameState","previousHoh","previousHOH","newHoH","randomPlayer","phase","generateHohCompScene","_generateHohCompScene2","vetoCompScene","_generateNomCeremonyS","nom1","nom2","noms","generateNomCeremonyScene","_generateNomCeremonyS2","vetoCeremonyScene","_generateVetoCompScen","choices","povPlayers","everyoneWillPlay","introText","extras","generateVetoCompScene","_generateVetoCompScen2","evictionScene","_generateVetoCeremony","_generateVetoCeremony2","_generateEvictionScen","votes","evictee","votesFor0","votesFor1","tieVote","tieBreaker","voteCountText","generateEvictionScene","_generateEvictionScen2","BigBrotherFinale","BigBrotherFinaleEpisode","finalHoH","finalEviction","_finalHohCompScene","final3","enduranceWinner","enduranceLosers","skillWinner","finalHohCompScene","_finalHohCompScene2","voteScene","_finalEvictionScene","finalEvictionScene","_finalEvictionScene2","voteCount","map","voteBlocks","winner","juryVoteScene","PriorityQueue","comparator","arguments","parent","left","right","_heap","_comparator","_len","values","Array","_key","_siftUp","poppedValue","peek","bottom","_swap","_siftDown","replacedValue","j","_ref","node","_greater","maxChild","EpisodeFactory","episodeType","iMap","jMap","impression","randomFloat","firstImpressions","heap","houseSize","updatePopularity","finalState","Error","factory","nextEpisode","find","inclusions","exclusions","excludedIds","includes","randomInt","house","sum","count","targetId","copy","_","cloneDeep","Sidebar","document","addEventListener","handleKeyDown","destroy","minWidth","getEpisodes","episodeKey","breakKey","getHighlight","getSelectedEpisode","inject","sidebar_Sidebar","mainContentArea_MainContentArea","App","mainPage_MainPage","Boolean","window","location","hostname","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f988995.chunk.js","sourcesContent":["export class PlayerProfile {\r\n  readonly name: string = \"\";\r\n  readonly imageURL: string = \"\";\r\n  readonly evictedImageURL: string = \"BW\";\r\n  constructor(init: PlayerProfile) {\r\n    if (!init) {\r\n      return;\r\n    }\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n","import { PlayerProfile } from \"./playerProfile\";\r\nimport { RelationshipMap } from \"../utils\";\r\n\r\nexport class Houseguest extends PlayerProfile {\r\n  public isEvicted: boolean = false;\r\n  public isJury: boolean = false;\r\n\r\n  readonly id: number = 0;\r\n\r\n  public nominations: number = 0;\r\n  public hohWins: number = 0;\r\n  public povWins: number = 0;\r\n\r\n  // Popularity ranges from -1 to 1\r\n  public popularity: number = 0;\r\n  public relativeEquity: number = 0;\r\n  public deltaPopularity: number = 0;\r\n  readonly relationships: RelationshipMap = {};\r\n\r\n  constructor(init: Houseguest) {\r\n    super(init);\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n","// spits out the next episode given a gamestate, in addition to the new gamestate.\r\n// allows for re-use, because you can give it the initial gamestate, and then just keep asking for the next season.\r\nexport function hashcode(string: string): number {\r\n  var hash = 0,\r\n    i,\r\n    chr;\r\n  if (string.length === 0) return hash;\r\n  for (i = 0; i < string.length; i++) {\r\n    chr = string.charCodeAt(i);\r\n    hash = (hash << 5) - hash + chr;\r\n    hash |= 0;\r\n  }\r\n  return hash;\r\n}\r\n\r\nexport function roundTwoDigits(number: number | undefined) {\r\n  if (!number) {\r\n    return 0;\r\n  }\r\n  return Math.round(number * 100);\r\n}\r\n\r\nexport function extremeValues(x: number | undefined): number {\r\n  if (!x) {\r\n    return 0;\r\n  }\r\n  const xSquared = x * x;\r\n  if (x >= 0) {\r\n    return -xSquared + 2 * x;\r\n  } else {\r\n    return xSquared + 2 * x;\r\n  }\r\n}\r\n","export interface RelationshipMap {\r\n  [id: number]: number;\r\n}\r\n\r\nexport function newRelationshipMap(\r\n  size: number,\r\n  exclude: number\r\n): RelationshipMap {\r\n  const result: RelationshipMap = {};\r\n  for (let i = 0; i < size; i++) {\r\n    if (i !== exclude) result[i] = 0;\r\n  }\r\n  return result;\r\n}\r\n","import { MainPage } from \"./mainPage\";\r\nimport { PlayerProfile } from \"../../model\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\nexport const cast$ = new BehaviorSubject<PlayerProfile[]>([]);\r\n\r\nexport function updateCast(newCast: PlayerProfile[]) {\r\n  cast$.next(newCast);\r\n}\r\n\r\nexport function getCast(): PlayerProfile[] {\r\n  return cast$.value;\r\n}\r\n\r\nexport class MainPageController {\r\n  private view: MainPage = new MainPage({ controller: this });\r\n\r\n  public inject(page: MainPage) {\r\n    this.view = page;\r\n  }\r\n}\r\n","import prand from \"pure-rand\";\r\nimport { cast$ } from \"../components/mainPage/mainPageController\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { hashcode } from \"./utilities\";\r\n\r\nexport class BbRandomGenerator {\r\n  private rng: prand.RandomGenerator;\r\n\r\n  public randomFloat(): number {\r\n    let result: number;\r\n    [result, this.rng] = this.rng.next();\r\n    return result / 2147483647.0;\r\n  }\r\n\r\n  public randomInt(a: number, b: number): number {\r\n    let result: number;\r\n    [result, this.rng] = prand.uniformIntDistribution(a, b, this.rng);\r\n    return result;\r\n  }\r\n\r\n  public seed(seed: number) {\r\n    this.rng = prand.xorshift128plus(seed);\r\n  }\r\n\r\n  public constructor(seed: number) {\r\n    this.rng = prand.xorshift128plus(seed);\r\n  }\r\n}\r\n\r\nexport function rng() {\r\n  return rng$.value;\r\n}\r\n\r\nconst rng$ = new BehaviorSubject(new BbRandomGenerator(0));\r\n\r\nconst castSub = cast$.subscribe({\r\n  next: cast => {\r\n    let castNames = \"\";\r\n    cast.forEach(houseguest => (castNames += houseguest.name));\r\n    rng$.next(new BbRandomGenerator(hashcode(castNames)));\r\n  }\r\n});\r\n","import { extremeValues, RelationshipMap } from \"../../utils\";\r\n\r\nconst maxPopularity = { r: 137, g: 252, b: 137 };\r\nconst minPopularity = { r: 252, g: 137, b: 137 };\r\nconst selectedColor = { r: 51, g: 255, b: 249 };\r\nexport interface PortraitProps {\r\n  evictedImageURL: string;\r\n  imageURL: string;\r\n  name: string;\r\n  id?: number;\r\n  relationships?: RelationshipMap;\r\n  isEvicted?: boolean;\r\n  isJury?: boolean;\r\n  popularity?: number;\r\n  deltaPopularity?: number;\r\n  generateSubtitle?: (props: PortraitProps, state: PortraitState) => string[];\r\n  tags?: string[];\r\n}\r\n\r\nexport interface PortraitState {\r\n  popularity?: number;\r\n}\r\n\r\nfunction componentToHex(c: any) {\r\n  var hex = Math.round(c).toString(16);\r\n  return hex.length == 1 ? \"0\" + hex : hex;\r\n}\r\n\r\nfunction rgbToHex(r: any, g: any, b: any) {\r\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\nexport function backgroundColor(\r\n  props: PortraitProps,\r\n  popularity: number | undefined\r\n) {\r\n  if (popularity && (popularity > 1 || popularity < -1)) {\r\n    return rgbToHex(selectedColor.r, selectedColor.g, selectedColor.b);\r\n  }\r\n  const extremePopularity = extremeValues(popularity);\r\n  const percent = (extremePopularity + 1) / 2;\r\n  return props.isEvicted\r\n    ? undefined\r\n    : rgbToHex(\r\n        minPopularity.r + percent * (maxPopularity.r - minPopularity.r),\r\n        minPopularity.g + percent * (maxPopularity.g - minPopularity.g),\r\n        minPopularity.b + percent * (maxPopularity.b - minPopularity.b)\r\n      );\r\n}\r\n","import { BehaviorSubject } from \"rxjs\";\r\nimport { Houseguest } from \"../../model\";\r\nimport { RelationshipMap } from \"../../utils\";\r\n\r\nexport const selectedPlayer$ = new BehaviorSubject<SelectedPlayerData | null>(\r\n  null\r\n);\r\n\r\nexport interface SelectedPlayerData {\r\n  id: number;\r\n  relationships: RelationshipMap;\r\n}\r\n\r\nexport function getSelectedPlayer() {\r\n  return selectedPlayer$.value;\r\n}\r\n\r\nexport function selectPlayer(player: SelectedPlayerData) {\r\n  if (\r\n    getSelectedPlayer() &&\r\n    (getSelectedPlayer() as Houseguest).id === player.id\r\n  ) {\r\n    selectedPlayer$.next(null);\r\n  } else {\r\n    selectedPlayer$.next(player);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  PortraitProps,\r\n  PortraitState,\r\n  backgroundColor\r\n} from \"./houseguestPortraitController\";\r\nimport { Subscription } from \"rxjs\";\r\nimport {\r\n  selectedPlayer$,\r\n  SelectedPlayerData,\r\n  selectPlayer\r\n} from \"./selectedPortrait\";\r\nimport { isNullOrUndefined } from \"util\";\r\n\r\nexport class HouseguestPortrait extends React.Component<\r\n  PortraitProps,\r\n  PortraitState\r\n> {\r\n  private sub: Subscription | null = null;\r\n\r\n  public constructor(props: PortraitProps) {\r\n    super(props);\r\n    this.state = { popularity: this.props.popularity };\r\n  }\r\n\r\n  public componentDidMount() {\r\n    if (isNullOrUndefined(this.props.id)) {\r\n      return;\r\n    }\r\n    this.sub = selectedPlayer$.subscribe({\r\n      next: (data: SelectedPlayerData | null) => {\r\n        if (!data) {\r\n          this.setState({ popularity: this.props.popularity });\r\n        } else {\r\n          data = data as SelectedPlayerData;\r\n          if (data.id !== this.props.id) {\r\n            this.setState({ popularity: data.relationships[this.props.id!] });\r\n          } else {\r\n            this.setState({ popularity: 2 });\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this.sub) {\r\n      this.sub.unsubscribe();\r\n      this.sub = null;\r\n    }\r\n  }\r\n\r\n  private onClick(): void {\r\n    if (isNullOrUndefined(this.props.id) || !this.props.relationships) {\r\n      return;\r\n    }\r\n    const data = { id: this.props.id, relationships: this.props.relationships };\r\n    selectPlayer(data);\r\n  }\r\n\r\n  public render() {\r\n    const props = this.props;\r\n    const evictedImageURL =\r\n      props.evictedImageURL === \"BW\" ? props.imageURL : props.evictedImageURL;\r\n    const imageSrc = props.isEvicted ? evictedImageURL : props.imageURL;\r\n    const imageClass = getImageClass(props);\r\n    let subtitle: any[] = [];\r\n    if (props.generateSubtitle) {\r\n      subtitle = props.generateSubtitle(this.props, this.state);\r\n    }\r\n    let className = \"\";\r\n    if (props.isJury) {\r\n      className = \"jury\";\r\n    } else if (props.isEvicted) {\r\n      className = \"evicted\";\r\n    }\r\n    return (\r\n      <div\r\n        onClick={() => this.onClick()}\r\n        style={{\r\n          backgroundColor: backgroundColor(props, this.state.popularity)\r\n        }}\r\n        className={`memory-wall-portrait ${className}`}\r\n      >\r\n        <img\r\n          className={imageClass}\r\n          src={imageSrc}\r\n          style={{ width: 100, height: 100 }}\r\n        />\r\n        <br />\r\n        {props.name}\r\n        <br />\r\n        {!!props.generateSubtitle && (\r\n          <small className=\"portrait-history\">{subtitle}</small>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction getImageClass(props: PortraitProps) {\r\n  let imageClass =\r\n    props.isEvicted && props.evictedImageURL === \"BW\" ? \"grayscale\" : \"\";\r\n  imageClass = props.isJury ? \"sepia\" : imageClass;\r\n  return imageClass;\r\n}\r\n","import React from \"react\";\r\nimport { PortraitProps, PortraitState } from \"./houseguestPortraitController\";\r\nimport { roundTwoDigits } from \"../../utils\";\r\nimport { ProfileHouseguest } from \"../memoryWall\";\r\n\r\nfunction _generateSubtitle(\r\n  houseguest: PortraitProps,\r\n  state: PortraitState,\r\n  detailed: boolean\r\n): any[] {\r\n  let key = 0;\r\n  let popularity = state.popularity;\r\n  if (popularity && (popularity > 1 || popularity < -1)) {\r\n    popularity = houseguest.popularity;\r\n  }\r\n  const subtitle: any[] = [];\r\n  if (popularity && !houseguest.isEvicted) {\r\n    let popularitySubtitle = `${roundTwoDigits(popularity)}%`;\r\n    const deltaPop = getDeltaPopularity(houseguest, popularity);\r\n    if (detailed && deltaPop !== 0) {\r\n      const arrow = deltaPop > 0 ? \" | ↑\" : \" | ↓\";\r\n      popularitySubtitle += `${arrow} ${deltaPop}%`;\r\n    }\r\n    subtitle.push(<div key={key++}>{popularitySubtitle}</div>);\r\n  }\r\n  subtitle.push(<div key={key++}>{`${compWins(houseguest)}`}</div>);\r\n  if (!`${compWins(houseguest)}`) subtitle.push(<br key={key++} />);\r\n  return subtitle;\r\n}\r\n\r\nexport function generateSubtitle(\r\n  houseguest: PortraitProps,\r\n  state: PortraitState\r\n): any[] {\r\n  return _generateSubtitle(houseguest, state, false);\r\n}\r\n\r\nexport function generateDetailedSubtitle(\r\n  houseguest: PortraitProps,\r\n  state: PortraitState\r\n): any[] {\r\n  return _generateSubtitle(houseguest, state, true);\r\n}\r\n\r\nfunction getDeltaPopularity(\r\n  houseguest: PortraitProps,\r\n  statePopularity: number\r\n) {\r\n  if (\r\n    roundTwoDigits(houseguest.popularity) !== roundTwoDigits(statePopularity)\r\n  ) {\r\n    return 0;\r\n  }\r\n  return houseguest.deltaPopularity\r\n    ? roundTwoDigits(houseguest.deltaPopularity)\r\n    : 0;\r\n}\r\n\r\nfunction compWins(houseguest: ProfileHouseguest): string {\r\n  return `${houseguest.hohWins ? `♔ ${houseguest.hohWins}` : \"\"}${\r\n    houseguest.povWins && houseguest.hohWins\r\n      ? `|🛇 ${houseguest.povWins}`\r\n      : houseguest.povWins\r\n      ? `🛇 ${houseguest.povWins}`\r\n      : \"\"\r\n  }${\r\n    (houseguest.hohWins || houseguest.povWins) && houseguest.nominations\r\n      ? \"|\"\r\n      : \"\"\r\n  }${houseguest.nominations ? `✘ ${houseguest.nominations}` : \"\"}`;\r\n}\r\n","import { ProfileHouseguest, HouseguestPortrait } from \"../memoryWall\";\r\nimport React from \"react\";\r\nimport { generateSubtitle, generateDetailedSubtitle } from \"./subtitle\";\r\n\r\nexport function houseguestToPortrait(\r\n  houseguest: ProfileHouseguest,\r\n  key?: any\r\n): JSX.Element {\r\n  return (\r\n    <HouseguestPortrait\r\n      {...houseguest}\r\n      key={key}\r\n      generateSubtitle={generateSubtitle}\r\n    />\r\n  );\r\n}\r\n\r\nexport function memoryWallPortrait(\r\n  houseguest: ProfileHouseguest,\r\n  key?: any\r\n): JSX.Element {\r\n  return (\r\n    <HouseguestPortrait\r\n      {...houseguest}\r\n      key={key}\r\n      generateSubtitle={generateDetailedSubtitle}\r\n    />\r\n  );\r\n}\r\n","import { ProfileHouseguest } from \"../memoryWall\";\r\nimport React from \"react\";\r\nimport {\r\n  houseguestToPortrait,\r\n  memoryWallPortrait\r\n} from \"./houseguestToPortrait\";\r\n\r\nexport function Portrait(props: {\r\n  houseguest: ProfileHouseguest;\r\n  centered?: boolean;\r\n}): JSX.Element {\r\n  return (\r\n    <div\r\n      className={`columns is-gapless is-mobile is-multiline ${props.centered &&\r\n        \"is-centered\"}`}\r\n    >\r\n      {houseguestToPortrait(props.houseguest)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Portraits(props: {\r\n  houseguests: ProfileHouseguest[];\r\n  centered?: boolean;\r\n  detailed?: boolean;\r\n}): JSX.Element {\r\n  let key = 0;\r\n  const rows: JSX.Element[] = [];\r\n  if (!props.houseguests || props.houseguests.length === 0) {\r\n    return <div />;\r\n  }\r\n  props.houseguests.forEach((houseguest: ProfileHouseguest) => {\r\n    if (props.detailed) {\r\n      rows.push(memoryWallPortrait(houseguest, key++));\r\n    } else {\r\n      rows.push(houseguestToPortrait(houseguest, key++));\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={`columns is-gapless is-mobile is-multiline ${props.centered &&\r\n        \"is-centered\"}`}\r\n    >\r\n      {rows}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./memoryWall.scss\";\r\nimport { PlayerProfile } from \"../../model\";\r\nimport { Portraits } from \"../playerPortrait/portraits\";\r\nimport { RelationshipMap } from \"../../utils\";\r\nexport interface IMemoryWallProps {\r\n  readonly houseguests: ProfileHouseguest[];\r\n}\r\n\r\nexport interface ProfileHouseguest extends PlayerProfile {\r\n  id?: number;\r\n  relationships?: RelationshipMap;\r\n  isEvicted?: boolean;\r\n  isJury?: boolean;\r\n  popularity?: number;\r\n  deltaPopularity?: number;\r\n  hohWins?: number;\r\n  povWins?: number;\r\n  nominations?: number;\r\n}\r\n\r\nexport function MemoryWall(props: IMemoryWallProps): JSX.Element {\r\n  return <div className=\"memory-wall\">{getPlayers(props)}</div>;\r\n}\r\n\r\nfunction getPlayers(props: IMemoryWallProps): any {\r\n  if (!props.houseguests || props.houseguests.length === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"auto\",\r\n        maxWidth: props.houseguests.length < 30 ? 700 : -1\r\n      }}\r\n    >\r\n      <Portraits\r\n        houseguests={props.houseguests}\r\n        centered={true}\r\n        detailed={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\ninterface SetupPortraitProps {\r\n  name: string;\r\n  imageUrl: string;\r\n  onDelete: () => void;\r\n  onChange: (arg0: Event) => void;\r\n}\r\n\r\ninterface SetupPortraitState {\r\n  name: string;\r\n}\r\n\r\nexport class SetupPortrait extends React.Component<\r\n  SetupPortraitProps,\r\n  SetupPortraitState\r\n> {\r\n  // TODO: When you click on the text, you can edit the text.\r\n\r\n  public constructor(props: SetupPortraitProps) {\r\n    super(props);\r\n    this.state = { name: props.name };\r\n  }\r\n\r\n  public componentWillReceiveProps(props: SetupPortraitProps) {\r\n    this.setState({ name: props.name });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className={`edit-portrait`}>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <div\r\n            className=\"x-button noselect\"\r\n            onDoubleClick={() => this.props.onDelete()}\r\n          >\r\n            ✘\r\n          </div>\r\n          <img src={this.props.imageUrl} style={{ width: 100, height: 100 }} />\r\n          <br />\r\n          <input\r\n            className=\"memory-wall-portrait\"\r\n            contentEditable={true}\r\n            onChange={() => this.props.onChange}\r\n            spellCheck={false}\r\n            value={this.state.name}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { PlayerProfile } from \"../../model\";\r\n\r\ninterface ImportLinksProps {\r\n  onSubmit: (profiles: PlayerProfile[]) => void;\r\n  className?: string;\r\n}\r\n\r\nexport class ImportLinks extends React.Component<ImportLinksProps, any> {\r\n  public constructor(props: ImportLinksProps) {\r\n    super(props);\r\n    this.state = { text: \"\" };\r\n  }\r\n\r\n  private onSubmit() {\r\n    const lines = this.state.text.split(/\\r?\\n/);\r\n    // ugly, but it works.\r\n    const profiles: PlayerProfile[] = [];\r\n    lines.forEach((line: string) => {\r\n      const temp = line.split(\"/\").pop();\r\n      let name = temp\r\n        ? temp\r\n            .split(\"#\")[0]\r\n            .split(\"?\")[0]\r\n            .replace(/\\.[^/.]+$/, \"\")\r\n            .replace(/[-_]/g, \" \")\r\n        : null;\r\n\r\n      if (line.substr(0, line.indexOf(\" \"))) {\r\n        name = line.substr(line.indexOf(\" \") + 1);\r\n      }\r\n      if (name) {\r\n        profiles.push({\r\n          name,\r\n          imageURL: line,\r\n          evictedImageURL: \"BW\"\r\n        });\r\n      }\r\n    });\r\n    this.props.onSubmit(profiles);\r\n    this.setState({ text: \"\" });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className={this.props.className}>\r\n        <textarea\r\n          className=\"textarea\"\r\n          onChange={event => {\r\n            this.setState({ text: event.target.value });\r\n          }}\r\n          value={this.state.text}\r\n        />\r\n        <button onClick={() => this.onSubmit()}>Import links</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Episode, EpisodeType } from \"./episodes\";\r\nimport { PregameScreen } from \"../../components/pregameScreen/pregameScreen\";\r\nimport { GameState } from \"../gameState\";\r\n\r\nconst PregameEpisodeType: EpisodeType = {\r\n  eliminates: 0,\r\n  canPlayWith: (n: number) => {\r\n    return n > 2;\r\n  }\r\n};\r\n\r\nexport class PregameEpisode implements Episode {\r\n  readonly title = \"Pregame\";\r\n  readonly scenes = [];\r\n  readonly render: JSX.Element;\r\n  readonly gameState: GameState;\r\n  readonly type = PregameEpisodeType;\r\n\r\n  public constructor(gameState: GameState) {\r\n    this.gameState = gameState;\r\n    this.render = <PregameScreen cast={gameState.houseguests} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport FileDrop from \"react-file-drop\";\r\nimport { PlayerProfile, GameState } from \"../../model\";\r\nimport { SetupPortrait } from \"../playerPortrait/setupPortrait\";\r\nimport { ImportLinks } from \"./importLinks\";\r\nimport { updateCast } from \"../mainPage/mainPageController\";\r\nimport { mainContentStream$ } from \"../mainPage/mainContentArea\";\r\nimport { PregameScreen } from \"../pregameScreen/pregameScreen\";\r\nimport { newEpisode } from \"../sidebar/sidebarController\";\r\nimport { PregameEpisode } from \"../../model/episode/pregameEpisode\";\r\nimport { shuffle } from \"lodash\";\r\n\r\ninterface CastingScreenState {\r\n  players: PlayerProfile[];\r\n}\r\n\r\ninterface CastingScreenProps {\r\n  cast?: PlayerProfile[];\r\n}\r\n\r\nexport class CastingScreen extends React.Component<\r\n  CastingScreenProps,\r\n  CastingScreenState\r\n> {\r\n  constructor(props: CastingScreenProps) {\r\n    super(props);\r\n    this.state = { players: props.cast || [] };\r\n  }\r\n\r\n  private handleChange(i: number) {\r\n    return (event: any) => {\r\n      const newName = event.target.value.replace(/\\r?\\n|\\r/g, \"\");\r\n      const newState = { ...this.state };\r\n      newState.players[i] = new PlayerProfile({\r\n        imageURL: newState.players[i].imageURL,\r\n        name: newName,\r\n        evictedImageURL: newState.players[i].evictedImageURL\r\n      });\r\n      this.setState(newState);\r\n    };\r\n  }\r\n\r\n  private deleteMethod(i: number) {\r\n    return () => {\r\n      const newState = { ...this.state };\r\n      newState.players.splice(i, 1);\r\n      this.setState(newState);\r\n    };\r\n  }\r\n\r\n  private getFiles() {\r\n    const players = this.state.players;\r\n\r\n    if (!players) {\r\n      return;\r\n    }\r\n\r\n    const rows: JSX.Element[] = [];\r\n    let i = 0;\r\n    players.forEach(player =>\r\n      rows.push(\r\n        <SetupPortrait\r\n          name={player.name}\r\n          imageUrl={player.imageURL}\r\n          onDelete={this.deleteMethod(i)}\r\n          onChange={this.handleChange(i)}\r\n          key={(++i).toString()}\r\n        />\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"columns is-gapless is-mobile is-multiline is-centered\">\r\n        {rows}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private appendProfiles = (profiles: PlayerProfile[]) => {\r\n    const newState = { ...this.state };\r\n    profiles.forEach(profile => newState.players.push(profile));\r\n    this.setState(newState);\r\n  };\r\n\r\n  private submit = async () => {\r\n    updateCast(this.state.players);\r\n    mainContentStream$.next(<PregameScreen cast={this.state.players} />);\r\n    await newEpisode(null);\r\n    await newEpisode(new PregameEpisode(new GameState(this.state.players)));\r\n  };\r\n\r\n  private random(amount: number) {\r\n    let players = this.state.players;\r\n    players = shuffle(players);\r\n    players = players.slice(0, amount);\r\n    this.setState({ players });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <FileDrop onDrop={this.handleDrop}>\r\n        <div className=\"level\">\r\n          <ImportLinks onSubmit={this.appendProfiles} />\r\n          <div className=\"level-item\">\r\n            <button\r\n              className=\"button is-danger\"\r\n              onClick={() => this.setState({ players: [] })}\r\n            >\r\n              Delete all\r\n            </button>\r\n          </div>\r\n          <div className=\"level-item\">\r\n            <div className=\" button is-primary\" onClick={() => this.random(16)}>\r\n              Random 16\r\n            </div>\r\n          </div>\r\n          <div className=\"level-item\">\r\n            <button\r\n              className=\"button is-primary\"\r\n              disabled={this.state.players.length < 3}\r\n              onClick={this.submit}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n        ~ Drop images ~{this.getFiles()}\r\n      </FileDrop>\r\n    );\r\n  }\r\n\r\n  private handleDrop = (files: FileList | null, event: React.DragEvent) => {\r\n    const newState = { ...this.state };\r\n\r\n    if (!files) {\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i];\r\n\r\n      if (file.type.match(/image\\/*/)) {\r\n        newState.players.push(\r\n          new PlayerProfile({\r\n            name: file.name.substr(0, file.name.lastIndexOf(\".\")) || file.name,\r\n            imageURL: URL.createObjectURL(file),\r\n            evictedImageURL: \"BW\"\r\n          })\r\n        );\r\n      }\r\n    }\r\n    this.setState(newState);\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { mainContentStream$ } from \"../mainPage/mainContentArea\";\r\nimport { CastingScreen } from \"../castingScreen/castingScreen\";\r\nimport \"./topBar.scss\";\r\nimport { getCast } from \"../mainPage/mainPageController\";\r\n\r\nexport function EditCastLink(): JSX.Element {\r\n  return (\r\n    <div\r\n      className=\"topbar-link\"\r\n      onClick={() => {\r\n        mainContentStream$.next(<CastingScreen cast={getCast()} />);\r\n      }}\r\n    >\r\n      Edit Cast\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function EditSeasonLink(): JSX.Element {\r\n  return (\r\n    <div\r\n      className=\"topbar-link\"\r\n      onClick={() => {\r\n        mainContentStream$.next(<CastingScreen cast={getCast()} />); // TODO: Proper edit season linking\r\n      }}\r\n    >\r\n      Edit Season\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Topbar(): JSX.Element {\r\n  return (\r\n    <div className=\"level box is-mobile\" style={{ marginTop: 30 }}>\r\n      <div className=\"level-item\">\r\n        <EditCastLink />\r\n      </div>\r\n      <div className=\"level-item\">\r\n        <EditSeasonLink />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { PlayerProfile } from \"../../model\";\r\nimport { MemoryWall } from \"../memoryWall\";\r\nimport { NextEpisodeButton } from \"../buttons/nextEpisodeButton\";\r\nimport { EditCastLink } from \"../topbar/topBar\";\r\n\r\ninterface PregameScreenProps {\r\n  cast: PlayerProfile[];\r\n}\r\n\r\nexport function PregameScreen(props: PregameScreenProps): JSX.Element {\r\n  if (props.cast.length === 0) {\r\n    return (\r\n      <div>\r\n        Cast is empty. <EditCastLink />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      Welcome to Big Brother!\r\n      <MemoryWall houseguests={props.cast} />\r\n      <NextEpisodeButton />\r\n    </div>\r\n  );\r\n  // TODO: Custom season title.\r\n}\r\n","import React from \"react\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { PregameScreen } from \"../pregameScreen/pregameScreen\";\r\n\r\nexport const mainContentStream$ = new BehaviorSubject(\r\n  <PregameScreen cast={[]} />\r\n);\r\n\r\nexport class MainContentArea extends React.Component<any, any> {\r\n  // a simple class that displays whatever it gets fed through the main content stream.\r\n\r\n  private contentStream: any;\r\n\r\n  public constructor(props: any) {\r\n    super(props);\r\n    this.state = { content: null };\r\n  }\r\n\r\n  public componentWillMount() {\r\n    this.contentStream = mainContentStream$.subscribe(content => {\r\n      this.setState({ content });\r\n    });\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.contentStream.unsubscribe();\r\n  }\r\n\r\n  public render() {\r\n    return <div className=\"box\">{this.state.content}</div>;\r\n  }\r\n}\r\n","import { Subject, Subscription, BehaviorSubject } from \"rxjs\";\r\nimport { Episode, Scene, nonEvictedHouseguests } from \"../../model\";\r\nimport { Sidebar } from \"./sidebar\";\r\nimport { Season } from \"../../model/season\";\r\nimport { mainContentStream$ } from \"../mainPage/mainContentArea\";\r\nimport { cast$ } from \"../mainPage/mainPageController\";\r\n\r\n// Null resets the season\r\nconst episodes$ = new BehaviorSubject<Episode | null>(null);\r\nconst switchEpisode$ = new Subject<number>();\r\n\r\nexport function newEpisode(episode: Episode | null) {\r\n  episodes$.next(episode);\r\n}\r\n\r\nexport function switchSceneRelative(n: number) {\r\n  switchEpisode$.next(n);\r\n}\r\n\r\ninterface IndexedScene {\r\n  scene: Scene;\r\n  index: number;\r\n}\r\n\r\nconst LEFT = 37;\r\nconst RIGHT = 39;\r\n\r\nexport class SidebarController {\r\n  private view: Sidebar;\r\n  private subscriptions: Subscription[] = [];\r\n  private season: Season = new Season();\r\n  private scenes: IndexedScene[] = [];\r\n  private selectedEpisode: number = 0;\r\n\r\n  public constructor(view: Sidebar) {\r\n    this.view = view;\r\n    this.subscriptions.push(\r\n      episodes$.subscribe({\r\n        next: episode => this.onNewEpisode(episode)\r\n      })\r\n    );\r\n    this.subscriptions.push(\r\n      switchEpisode$.subscribe({\r\n        next: (value: number) => this.switchSceneRelative(value)\r\n      })\r\n    );\r\n    this.subscriptions.push(\r\n      cast$.subscribe({\r\n        next: newCast => (this.season = new Season())\r\n      })\r\n    );\r\n  }\r\n\r\n  public getSelectedEpisode() {\r\n    return this.selectedEpisode;\r\n  }\r\n\r\n  public switchToScene(id: number) {\r\n    mainContentStream$.next(this.scenes[id].scene.render);\r\n    this.selectedEpisode = this.scenes[id].index;\r\n    this.view.setState({ selectedScene: id });\r\n  }\r\n\r\n  private switchSceneRelative = (delta: number) => {\r\n    const selectedScene = this.view.state.selectedScene;\r\n    const renderedScenes = this.scenes.length;\r\n    const targetScene = selectedScene + delta;\r\n\r\n    if (targetScene < 0) {\r\n      return;\r\n    }\r\n    const lastEpisode = this.view.state.episodes[\r\n      this.view.state.episodes.length - 1\r\n    ];\r\n\r\n    if (targetScene < renderedScenes) {\r\n      this.switchToScene(targetScene);\r\n    } else if (targetScene === renderedScenes) {\r\n      const currentGameState = lastEpisode.gameState;\r\n      const newPlayerCount = nonEvictedHouseguests(lastEpisode.gameState)\r\n        .length;\r\n      const nextEpisodeType = this.season.whichEpisodeType(newPlayerCount);\r\n      if (newPlayerCount > 2) {\r\n        newEpisode(\r\n          this.season.renderEpisode(currentGameState, nextEpisodeType)\r\n        );\r\n        this.switchSceneRelative(1);\r\n      }\r\n    }\r\n  };\r\n\r\n  public handleKeyDown(event: any) {\r\n    if (event.keyCode === LEFT) {\r\n      switchSceneRelative(-1);\r\n    } else if (event.keyCode === RIGHT) {\r\n      switchSceneRelative(1);\r\n    }\r\n  }\r\n\r\n  private onNewEpisode(episode: Episode | null) {\r\n    if (!episode) {\r\n      this.view.setState({ episodes: [], selectedScene: 0 });\r\n      this.scenes = [];\r\n    } else {\r\n      const newState = { ...this.view.state };\r\n      // starts at -1: prevent OBOE\r\n      const latestIndex =\r\n        this.scenes.length === 0\r\n          ? -1\r\n          : this.scenes[this.scenes.length - 1].index;\r\n      const index = latestIndex + 1;\r\n      this.scenes.push({ scene: episode, index });\r\n      episode.scenes.forEach(scene => this.scenes.push({ scene, index }));\r\n      newState.episodes.push(episode);\r\n      this.view.setState(newState);\r\n    }\r\n  }\r\n\r\n  public destroy() {\r\n    this.subscriptions.forEach(sub => sub.unsubscribe());\r\n  }\r\n}\r\n","import { switchSceneRelative } from \"../sidebar/sidebarController\";\r\nimport React from \"react\";\r\n\r\nexport function NextEpisodeButton(): JSX.Element {\r\n  return (\r\n    <button\r\n      className=\"button is-primary\"\r\n      onClick={() => switchSceneRelative(1)}\r\n    >\r\n      Continue\r\n    </button>\r\n  );\r\n}\r\n","import {\r\n  Houseguest,\r\n  nonEvictedHouseguests,\r\n  GameState,\r\n  getJurors,\r\n  inJury,\r\n  calculatePopularity,\r\n  exclude\r\n} from \"../model\";\r\nimport { finalJurySize } from \"../model/season\";\r\n\r\nconst relationship = (hero: Houseguest, villain: Houseguest) =>\r\n  hero.relationships[villain.id];\r\n\r\nfunction leastFavouriteId(hero: Houseguest, options: Houseguest[]) {\r\n  // Return the ID of the houseguest that hero has the worst relationship with.\r\n  return options[lowestScore(hero, options, relationship)].id;\r\n}\r\n\r\nfunction favouriteIndex(hero: Houseguest, options: Houseguest[]) {\r\n  // Return the index of the houseguest that hero has the worst relationship with.\r\n  return highestScore(hero, options, relationship);\r\n}\r\n\r\nfunction highestScore(\r\n  hero: Houseguest,\r\n  options: Houseguest[],\r\n  callback: (hero: Houseguest, villain: Houseguest) => number\r\n) {\r\n  let highestIndex = 0;\r\n  let highestScore = -Infinity;\r\n  options.forEach((villain, i) => {\r\n    const currentScore = callback(hero, villain);\r\n    if (currentScore > highestScore) {\r\n      highestIndex = i;\r\n      highestScore = currentScore;\r\n    }\r\n  });\r\n  return highestIndex;\r\n}\r\nfunction lowestScore(\r\n  hero: Houseguest,\r\n  options: Houseguest[],\r\n  callback: (hero: Houseguest, villain: Houseguest) => number\r\n) {\r\n  let lowestIndex = 0;\r\n  let lowestScore = Infinity;\r\n  options.forEach((villain, i) => {\r\n    const currentScore = callback(hero, villain);\r\n    if (currentScore < lowestScore) {\r\n      lowestIndex = i;\r\n      lowestScore = currentScore;\r\n    }\r\n  });\r\n  return lowestIndex;\r\n}\r\n\r\nexport function juryEquity(\r\n  hero: Houseguest,\r\n  villain: Houseguest,\r\n  gameState: GameState\r\n): number {\r\n  const jurors = getJurors(gameState);\r\n  const juryWeight = jurors.length / finalJurySize();\r\n  const houseWeight = 1 - juryWeight;\r\n  const juryScore = calculatePopularity(villain, jurors);\r\n  const houseScore =\r\n    hero.id !== villain.id\r\n      ? calculatePopularity(\r\n          villain,\r\n          exclude(nonEvictedHouseguests(gameState), [hero])\r\n        )\r\n      : villain.popularity;\r\n  return juryScore * juryWeight + houseScore * houseWeight;\r\n}\r\n\r\n// A higher number represents a higher threat score.\r\n// A negative number represents someone who is not a threat.\r\nfunction threatScore(\r\n  hero: Houseguest,\r\n  villain: Houseguest,\r\n  gameState: GameState\r\n): number {\r\n  let juryThreatWeight = 0;\r\n  if (inJury(gameState)) {\r\n    // TODO: hit list logic will automatically take shield logic into account,\r\n    // since the popular people won't have as big a jury hit list.\r\n    const actualJurors = getJurors(gameState).length;\r\n    const multiplier =\r\n      gameState.remainingPlayers === 3 ? 1 : hero.relativeEquity;\r\n    juryThreatWeight =\r\n      1 - ((finalJurySize() - actualJurors - 1) / finalJurySize()) * multiplier;\r\n  }\r\n  const jEquity = juryEquity(hero, villain, gameState);\r\n  return (\r\n    juryThreatWeight * jEquity +\r\n    (1 - juryThreatWeight) * -relationship(hero, villain)\r\n  );\r\n}\r\n\r\nexport function castEvictionVote(\r\n  hero: Houseguest,\r\n  nominees: Houseguest[],\r\n  gameState: GameState\r\n): number {\r\n  // Return the index of the eviction target.\r\n  const callback = (hero: Houseguest, villain: Houseguest) =>\r\n    threatScore(hero, villain, gameState);\r\n\r\n  return highestScore(hero, nominees, callback);\r\n}\r\n\r\nexport function nominatePlayer(\r\n  hero: Houseguest,\r\n  options: Houseguest[],\r\n  gameState: GameState\r\n): number {\r\n  // returns the id of a nominee\r\n  const callback = (hero: Houseguest, villain: Houseguest) =>\r\n    threatScore(hero, villain, gameState);\r\n  return options[highestScore(hero, options, callback)].id;\r\n}\r\n\r\nexport function useGoldenVeto(\r\n  hero: Houseguest,\r\n  nominees: Houseguest[],\r\n  gameState: GameState\r\n): Houseguest | null {\r\n  let povTarget: Houseguest | null = null;\r\n  if (hero.id == nominees[0].id || hero.id == nominees[1].id) {\r\n    povTarget = hero;\r\n  } else {\r\n    // incredibly basic veto logic - veto people that are not a threat to me.\r\n    // probably results in the veto almost always getting used, but can result\r\n    // in some fun situations where someone keeps saving an unpopular friend.\r\n    let save = -1;\r\n    const threat0 = threatScore(hero, nominees[0], gameState);\r\n    const threat1 = threatScore(hero, nominees[1], gameState);\r\n    if (threat0 < 0 || threat1 < 0) {\r\n      save = Math.min(threat0, threat1) === threat0 ? 0 : 1;\r\n    }\r\n    if (nonEvictedHouseguests(gameState).length !== 4 && save > -1) {\r\n      povTarget = nominees[save];\r\n    }\r\n  }\r\n  return povTarget;\r\n}\r\n\r\nexport function castJuryVote(\r\n  juror: Houseguest,\r\n  finalists: Houseguest[]\r\n): number {\r\n  return favouriteIndex(juror, finalists);\r\n}\r\n","import { Houseguest } from \"./houseguest\";\r\nimport { PlayerProfile } from \"./playerProfile\";\r\nimport _ from \"lodash\";\r\nimport { newRelationshipMap, rng } from \"../utils\";\r\nimport { finalJurySize, getFinalists } from \"./season\";\r\n\r\nexport function getById(gameState: GameState, id: number): Houseguest {\r\n  const result = gameState.houseguests.find(hg => hg.id === id);\r\n  if (!result) {\r\n    throw new Error(`Failed to find houseguest with id ${id}`);\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function exclude(inclusions: Houseguest[], exclusions: Houseguest[]) {\r\n  const excludedIds = exclusions.map(hg => hg.id);\r\n  return inclusions.filter(hg => !excludedIds.includes(hg.id) && !hg.isEvicted);\r\n}\r\n\r\nexport function randomPlayer(\r\n  inclusions: Houseguest[],\r\n  exclusions: Houseguest[] = []\r\n): Houseguest {\r\n  if (inclusions.length === 0) {\r\n    throw new Error(\"Tried to get a random player from a list of 0 players.\");\r\n  }\r\n  const options = exclude(inclusions, exclusions);\r\n  const choice = rng().randomInt(0, options.length - 1);\r\n\r\n  return options[choice];\r\n}\r\n\r\nexport function nonEvictedHouseguests(gameState: GameState) {\r\n  return gameState.houseguests.filter(hg => !hg.isEvicted);\r\n}\r\nexport function getJurors(gameState: GameState) {\r\n  return gameState.houseguests.filter(hg => hg.isJury);\r\n}\r\n\r\nexport function inJury(gameState: GameState): Boolean {\r\n  return gameState.remainingPlayers - getFinalists() <= finalJurySize();\r\n}\r\n\r\nexport function calculatePopularity(hero: Houseguest, house: Houseguest[]) {\r\n  let sum = 0;\r\n  let count = 0;\r\n  const targetId = hero.id;\r\n  house.forEach(houseguest => {\r\n    if (houseguest.id !== targetId) {\r\n      count++;\r\n      sum += houseguest.relationships[targetId];\r\n    }\r\n  });\r\n  return count === 0 ? 0 : sum / count;\r\n}\r\n\r\nexport class GameState {\r\n  // Current state of the game after a phase.\r\n\r\n  readonly houseguests: Houseguest[] = [];\r\n  readonly remainingPlayers: number = 0;\r\n  readonly phase: number = 0;\r\n  readonly previousHOH?: Houseguest;\r\n\r\n  public constructor(init: PlayerProfile[] | GameState) {\r\n    if (!(init instanceof Array)) {\r\n      Object.assign(this, init);\r\n    } else {\r\n      const profiles = init as PlayerProfile[];\r\n      this.remainingPlayers = profiles.length;\r\n      let id = -1;\r\n      profiles.forEach(profile => {\r\n        this.houseguests.push(\r\n          new Houseguest({\r\n            ...profile,\r\n            isEvicted: false,\r\n            isJury: false,\r\n            id: ++id,\r\n            nominations: 0,\r\n            hohWins: 0,\r\n            povWins: 0,\r\n            popularity: 0,\r\n            relativeEquity: 0,\r\n            deltaPopularity: 0,\r\n            relationships: newRelationshipMap(profiles.length, id)\r\n          })\r\n        );\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport class MutableGameState {\r\n  public houseguests: Houseguest[] = [];\r\n  public remainingPlayers: number = 0;\r\n  public phase: number = 0;\r\n  public previousHOH?: Houseguest;\r\n\r\n  public constructor(init: GameState | MutableGameState) {\r\n    const copy = _.cloneDeep(init);\r\n    Object.assign(this, copy);\r\n  }\r\n}\r\n","import { BigBrotherVanilla } from \"./episode/bigBrotherEpisode\";\r\nimport { EpisodeFactory } from \"./episode/episodeFactory\";\r\nimport { GameState } from \"./gameState\";\r\nimport { EpisodeType, Episode } from \".\";\r\nimport { BigBrotherFinale } from \"./episode/bigBrotherFinale\";\r\nimport { cast$ } from \"../components/mainPage/mainPageController\";\r\n\r\nexport function finalJurySize() {\r\n  return jurors;\r\n}\r\n\r\nlet jurors = 7;\r\nconst sub = cast$.subscribe({\r\n  next: newCast => {\r\n    let players = newCast.length;\r\n    players = Math.round(players * 0.55);\r\n    if (players % 2 === 0) {\r\n      players--;\r\n    }\r\n    jurors = players;\r\n  }\r\n});\r\n\r\nexport function getFinalists() {\r\n  return 2;\r\n}\r\n\r\nexport class Season {\r\n  private factory: EpisodeFactory;\r\n\r\n  public constructor() {\r\n    this.factory = new EpisodeFactory();\r\n  }\r\n\r\n  // In the future, this would all be customizable,\r\n  // and not just all big brother episodes by default.\r\n\r\n  public renderEpisode(gameState: GameState, type: EpisodeType): Episode {\r\n    return this.factory.nextEpisode(gameState, type);\r\n  }\r\n\r\n  public whichEpisodeType(players: number) {\r\n    if (players === 3) {\r\n      return BigBrotherFinale;\r\n    }\r\n    return BigBrotherVanilla;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Episode, GameState, randomPlayer } from \"..\";\r\nimport { MemoryWall } from \"../../components/memoryWall\";\r\nimport { NextEpisodeButton } from \"../../components/buttons/nextEpisodeButton\";\r\nimport { EpisodeType, Scene } from \"./episodes\";\r\nimport { Houseguest } from \"../houseguest\";\r\nimport _, { shuffle } from \"lodash\";\r\nimport {\r\n  MutableGameState,\r\n  getById,\r\n  nonEvictedHouseguests,\r\n  exclude\r\n} from \"../gameState\";\r\nimport { Portraits, Portrait } from \"../../components/playerPortrait/portraits\";\r\nimport { finalJurySize, getFinalists } from \"../season\";\r\nimport {\r\n  castEvictionVote,\r\n  nominatePlayer,\r\n  useGoldenVeto\r\n} from \"../../utils/aiUtils\";\r\n\r\nexport const BigBrotherVanilla: EpisodeType = {\r\n  canPlayWith: (n: number) => {\r\n    return n > 1;\r\n  },\r\n  eliminates: 1\r\n};\r\n\r\n// TODO: Refactoring ideas\r\n/**\r\n * Might be best to start passing ids instead of houseguests for HoH/nominees/veto winner\r\n */\r\n\r\nfunction generateHohCompScene(\r\n  initialGameState: GameState\r\n): [GameState, Scene, Houseguest] {\r\n  const newGameState = new MutableGameState(initialGameState);\r\n\r\n  const previousHoh = initialGameState.previousHOH\r\n    ? [initialGameState.previousHOH]\r\n    : [];\r\n  const newHoH: Houseguest = randomPlayer(\r\n    newGameState.houseguests,\r\n    previousHoh\r\n  );\r\n  newGameState.previousHOH = newHoH;\r\n  newGameState.phase++;\r\n  newHoH.hohWins += 1;\r\n\r\n  const scene = {\r\n    title: \"HoH Competition\",\r\n    gameState: initialGameState,\r\n    render: (\r\n      <div>\r\n        {previousHoh.length > 0 &&\r\n          `Houseguests, it's time to find a new Head of Household. As outgoing HoH, ${\r\n            previousHoh[0].name\r\n          } will not compete. `}\r\n        <Portrait houseguest={newHoH} />\r\n        {newHoH.name} has won Head of Household!\r\n        <br />\r\n        <NextEpisodeButton />\r\n      </div>\r\n    )\r\n  };\r\n\r\n  return [new GameState(newGameState), scene, newHoH];\r\n}\r\n\r\nfunction generateNomCeremonyScene(\r\n  initialGameState: GameState,\r\n  HoH: Houseguest\r\n): [GameState, Scene, Houseguest[]] {\r\n  const newGameState = new MutableGameState(initialGameState);\r\n  const options = nonEvictedHouseguests(newGameState);\r\n  const nom1 = getById(\r\n    newGameState,\r\n    nominatePlayer(HoH, exclude(options, [HoH]), newGameState)\r\n  );\r\n  const nom2 = getById(\r\n    newGameState,\r\n    nominatePlayer(HoH, exclude(options, [HoH, nom1]), newGameState)\r\n  );\r\n\r\n  nom1.nominations++;\r\n  nom2.nominations++;\r\n\r\n  const noms = shuffle([nom1, nom2]);\r\n\r\n  const scene = {\r\n    title: \"Nomination Ceremony\",\r\n    gameState: newGameState,\r\n    render: (\r\n      <div>\r\n        <Portrait houseguest={HoH} />\r\n        <br />\r\n        This is the nomination ceremony. It is my responsibility as the Head of\r\n        Household to nominate two houseguests for eviction.\r\n        <br />\r\n        <b>\r\n          My first nominee is...\r\n          <br />\r\n          <Portrait houseguest={noms[0]} />\r\n          <br />\r\n          My second nominee is...\r\n          <br />\r\n          <Portrait houseguest={noms[1]} />\r\n          {`I have nominated you, ${noms[0].name} and you, ${\r\n            noms[1].name\r\n          } for eviction.`}\r\n          <br />\r\n        </b>\r\n        <NextEpisodeButton />\r\n      </div>\r\n    )\r\n  };\r\n  return [new GameState(newGameState), scene, [nom1, nom2]];\r\n}\r\n\r\nfunction generateVetoCompScene(\r\n  initialGameState: GameState,\r\n  HoH: Houseguest,\r\n  nom1: Houseguest,\r\n  nom2: Houseguest\r\n): [GameState, Scene, Houseguest] {\r\n  const newGameState = new MutableGameState(initialGameState);\r\n\r\n  // pick players\r\n  const choices = nonEvictedHouseguests(newGameState);\r\n  let povPlayers: Houseguest[] = [];\r\n  const everyoneWillPlay = choices.length <= 6;\r\n\r\n  if (everyoneWillPlay) {\r\n    povPlayers.push({ ...HoH });\r\n    povPlayers.push({ ...nom1 });\r\n    povPlayers.push({ ...nom2 });\r\n    while (povPlayers.length < choices.length) {\r\n      povPlayers.push({ ...randomPlayer(choices, povPlayers) });\r\n    }\r\n  } else {\r\n    // TODO: houseguests choice picks\r\n    povPlayers.push({ ...HoH });\r\n    povPlayers.push({ ...nom1 });\r\n    povPlayers.push({ ...nom2 });\r\n    povPlayers.push({ ...randomPlayer(choices, povPlayers) });\r\n    povPlayers.push({ ...randomPlayer(choices, povPlayers) });\r\n    povPlayers.push({ ...randomPlayer(choices, povPlayers) });\r\n  }\r\n  let povWinner = randomPlayer(povPlayers);\r\n  povWinner = getById(newGameState, povWinner.id);\r\n  povWinner.povWins++;\r\n\r\n  let introText: string;\r\n  if (everyoneWillPlay) {\r\n    introText = \"Everyone left in the house will compete in this challenge.\";\r\n  } else {\r\n    introText = `${HoH.name}, as Head of Household, and ${nom1.name} and ${\r\n      nom2.name\r\n    } as nominees, will compete, as well as 3 others chosen by random draw.`;\r\n  }\r\n\r\n  const extras = [povPlayers[3]];\r\n  povPlayers[4] && extras.push(povPlayers[4]);\r\n  povPlayers[5] && extras.push(povPlayers[5]);\r\n\r\n  const scene = {\r\n    title: \"Veto Competition\",\r\n    gameState: initialGameState,\r\n    render: (\r\n      <div>\r\n        It's time to pick players for the veto competition.\r\n        <br />\r\n        <Portraits houseguests={[HoH, nom1, nom2]} />\r\n        <br />\r\n        {introText}\r\n        <br />\r\n        <Portraits houseguests={extras} />\r\n        ...\r\n        <Portraits houseguests={[povWinner]} />\r\n        {`${povWinner.name} has won the Golden Power of Veto!`}\r\n        <br />\r\n        <NextEpisodeButton />\r\n      </div>\r\n    )\r\n  };\r\n\r\n  return [new GameState(newGameState), scene, povWinner];\r\n}\r\n\r\nfunction generateVetoCeremonyScene(\r\n  initialGameState: GameState,\r\n  HoH: Houseguest,\r\n  initialNominees: Houseguest[],\r\n  povWinner: Houseguest\r\n): [Scene, Houseguest[]] {\r\n  let povTarget: Houseguest | null = null;\r\n  let descisionText = \"\";\r\n  initialNominees[0] = getById(initialGameState, initialNominees[0].id);\r\n  initialNominees[1] = getById(initialGameState, initialNominees[1].id);\r\n  HoH = getById(initialGameState, HoH.id);\r\n\r\n  povTarget = useGoldenVeto(povWinner, initialNominees, initialGameState);\r\n\r\n  if (!povTarget) {\r\n    descisionText += \"... not to use the power of veto.\";\r\n  } else if (\r\n    povWinner.id == initialNominees[0].id ||\r\n    povWinner.id == initialNominees[1].id\r\n  ) {\r\n    descisionText += \"...to use the power of veto on myself.\";\r\n  } else {\r\n    descisionText += `...to use the power of veto on ${povTarget.name}.`;\r\n  }\r\n\r\n  let replacementSpeech = \"\";\r\n  let nameAReplacement = \"\";\r\n  let finalNominees = initialNominees;\r\n  if (povTarget) {\r\n    finalNominees = initialNominees.filter(hg => hg.id != povTarget!.id);\r\n    nameAReplacement += ` ${\r\n      HoH.name\r\n    }, since I have just vetoed one of your nominations, you must name a replacement nominee.`;\r\n    const replacementNom = {\r\n      ...getById(\r\n        initialGameState,\r\n        nominatePlayer(\r\n          HoH,\r\n          exclude(initialGameState.houseguests, [\r\n            HoH,\r\n            initialNominees[0],\r\n            initialNominees[1],\r\n            povWinner\r\n          ]),\r\n          initialGameState\r\n        )\r\n      )\r\n    };\r\n    replacementNom.nominations++;\r\n    finalNominees.push(replacementNom);\r\n    getById(initialGameState, replacementNom.id).nominations++;\r\n    replacementSpeech = `My replacement nominee is ${replacementNom.name}.`;\r\n  }\r\n\r\n  const scene = {\r\n    title: \"Veto Ceremony\",\r\n    gameState: initialGameState,\r\n    render: (\r\n      <div>\r\n        This is the Veto Ceremony.\r\n        <br />\r\n        {`${initialNominees[0].name} and ${\r\n          initialNominees[1].name\r\n        } have been nominated for eviction.`}\r\n        <Portraits houseguests={initialNominees} />\r\n        But I have the power to veto one of these nominations.\r\n        <br />\r\n        <b>\r\n          I have decided...\r\n          <Portrait houseguest={povWinner} />\r\n          {descisionText}\r\n        </b>\r\n        {nameAReplacement}\r\n        {replacementSpeech && <Portrait houseguest={HoH} />}\r\n        <b>{replacementSpeech}</b>\r\n        <Portraits houseguests={finalNominees} />\r\n        <NextEpisodeButton />\r\n      </div>\r\n    )\r\n  };\r\n  return [scene, finalNominees];\r\n}\r\n\r\nexport function evictHouseguest(gameState: MutableGameState, id: number) {\r\n  const houseguest = getById(gameState, id);\r\n  houseguest.isEvicted = true;\r\n  if (gameState.remainingPlayers - getFinalists() <= finalJurySize()) {\r\n    houseguest.isJury = true;\r\n  }\r\n  gameState.remainingPlayers--;\r\n}\r\n\r\nfunction generateEvictionScene(\r\n  initialGameState: GameState,\r\n  HoH: Houseguest,\r\n  nominees: Houseguest[]\r\n): [GameState, Scene] {\r\n  const newGameState = new MutableGameState(initialGameState);\r\n  nominees = shuffle(nominees);\r\n  const votes: Array<Houseguest[]> = [[], []];\r\n  nonEvictedHouseguests(newGameState).forEach(hg => {\r\n    if (\r\n      hg.id !== nominees[0].id &&\r\n      hg.id !== nominees[1].id &&\r\n      hg.id !== HoH.id\r\n    ) {\r\n      votes[castEvictionVote(hg, nominees, newGameState)].push(hg);\r\n    }\r\n  });\r\n  const votesFor0 = votes[0].length;\r\n  const votesFor1 = votes[1].length;\r\n\r\n  let tieVote = votesFor0 === votesFor1;\r\n  let tieBreaker: number = 0;\r\n  if (tieVote) {\r\n    tieBreaker = castEvictionVote(HoH, nominees, newGameState);\r\n  }\r\n  let evictee: Houseguest;\r\n  if (votesFor0 > votesFor1) {\r\n    evictee = nominees[0];\r\n  } else if (votesFor1 > votesFor0) {\r\n    evictee = nominees[1];\r\n  } else {\r\n    evictee = nominees[tieBreaker];\r\n  }\r\n  evictHouseguest(newGameState, evictee.id);\r\n\r\n  const isUnanimous = votesFor0 === 0 || votesFor1 === 0;\r\n  const voteCountText = isUnanimous\r\n    ? \"By a unanimous vote...\"\r\n    : `By a vote of ${votesFor0} to ${votesFor1}...`;\r\n\r\n  const scene = {\r\n    title: \"Live Eviction\",\r\n    gameState: initialGameState,\r\n    render: (\r\n      <div>\r\n        <p style={{ textAlign: \"center\" }}>\r\n          <b>{voteCountText} </b>\r\n        </p>\r\n        <div className=\"columns is-centered\">\r\n          <div className=\"column box\">\r\n            <Portraits houseguests={votes[0]} centered={true} />\r\n          </div>\r\n          <div className=\"column box\">\r\n            <Portraits houseguests={votes[1]} centered={true} />\r\n          </div>\r\n        </div>\r\n        {tieVote && (\r\n          <div>\r\n            <p style={{ textAlign: \"center\" }}>\r\n              <b> We have a tie.</b> <br />\r\n              {`${\r\n                HoH.name\r\n              }, as current Head of Household, you must cast the sole vote to evict.`}\r\n            </p>\r\n            <Portraits houseguests={[HoH]} centered={true} />\r\n            <p style={{ textAlign: \"center\" }}>\r\n              <b>I vote to evict {`${evictee.name}.`}</b>\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        <Portraits\r\n          houseguests={[\r\n            getById(newGameState, nominees[0].id),\r\n            getById(newGameState, nominees[1].id)\r\n          ]}\r\n          centered={true}\r\n        />\r\n        <p style={{ textAlign: \"center\" }}>\r\n          <b>\r\n            {`${\r\n              evictee.name\r\n            }... you have been evicted from the Big Brother House.`}\r\n          </b>\r\n        </p>\r\n        <NextEpisodeButton />\r\n      </div>\r\n    )\r\n  };\r\n  return [newGameState, scene];\r\n}\r\n\r\nexport class BigBrotherVanillaEpisode implements Episode {\r\n  readonly title: string;\r\n  readonly scenes: Scene[] = [];\r\n  readonly render: JSX.Element;\r\n  readonly gameState: GameState;\r\n  readonly type = BigBrotherVanilla;\r\n\r\n  public constructor(initialGameState: GameState) {\r\n    let currentGameState;\r\n    let hohCompScene;\r\n    let hoh: Houseguest;\r\n\r\n    [currentGameState, hohCompScene, hoh] = generateHohCompScene(\r\n      initialGameState\r\n    );\r\n    this.scenes.push(hohCompScene);\r\n\r\n    let nomCeremonyScene;\r\n    let nominees: Houseguest[];\r\n    [currentGameState, nomCeremonyScene, nominees] = generateNomCeremonyScene(\r\n      currentGameState,\r\n      hoh\r\n    );\r\n    this.scenes.push(nomCeremonyScene);\r\n\r\n    let vetoCompScene;\r\n    let povWinner: Houseguest;\r\n    [currentGameState, vetoCompScene, povWinner] = generateVetoCompScene(\r\n      currentGameState,\r\n      hoh,\r\n      nominees[0],\r\n      nominees[1]\r\n    );\r\n    this.scenes.push(vetoCompScene);\r\n    let vetoCeremonyScene;\r\n\r\n    [vetoCeremonyScene, nominees] = generateVetoCeremonyScene(\r\n      currentGameState,\r\n      hoh,\r\n      nominees,\r\n      povWinner\r\n    );\r\n    this.scenes.push(vetoCeremonyScene);\r\n\r\n    let evictionScene;\r\n    [currentGameState, evictionScene] = generateEvictionScene(\r\n      currentGameState,\r\n      hoh,\r\n      nominees\r\n    );\r\n    this.scenes.push(evictionScene);\r\n\r\n    this.title = `Week ${currentGameState.phase}`;\r\n    this.render = (\r\n      <div>\r\n        {/* TODO: custom title here*/}\r\n        {`Week ${currentGameState.phase}`}\r\n        <MemoryWall houseguests={initialGameState.houseguests} /> <br />\r\n        <NextEpisodeButton />\r\n      </div>\r\n    );\r\n    this.gameState = new GameState(currentGameState);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { EpisodeType, Episode, Scene } from \"./episodes\";\r\nimport { GameState } from \"..\";\r\nimport { MemoryWall } from \"../../components/memoryWall\";\r\nimport { NextEpisodeButton } from \"../../components/buttons/nextEpisodeButton\";\r\nimport { Houseguest } from \"../houseguest\";\r\nimport {\r\n  nonEvictedHouseguests,\r\n  MutableGameState,\r\n  randomPlayer,\r\n  getById,\r\n  getJurors\r\n} from \"../gameState\";\r\nimport { Portraits, Portrait } from \"../../components/playerPortrait/portraits\";\r\nimport { castEvictionVote, castJuryVote } from \"../../utils/aiUtils\";\r\nimport { evictHouseguest } from \"./bigBrotherEpisode\";\r\n\r\nexport const BigBrotherFinale: EpisodeType = {\r\n  canPlayWith: (n: number) => n === 3,\r\n  eliminates: 2\r\n};\r\n\r\nfunction finalHohCompScene(\r\n  initialGameState: GameState\r\n): [GameState, Scene, Houseguest] {\r\n  const newGameState = new MutableGameState(initialGameState);\r\n  const final3 = nonEvictedHouseguests(initialGameState);\r\n  const enduranceWinner = randomPlayer(final3);\r\n  const enduranceLosers = final3.filter(hg => hg.id !== enduranceWinner.id);\r\n  const skillWinner = randomPlayer(final3, [enduranceWinner]);\r\n  const finalHoH = getById(\r\n    newGameState,\r\n    randomPlayer([enduranceWinner, skillWinner]).id\r\n  );\r\n  finalHoH.hohWins++;\r\n  const scene: Scene = {\r\n    title: \"Final HoH Competition\",\r\n    gameState: newGameState,\r\n    render: (\r\n      <div>\r\n        <p>The final 3 houseguests compete in the endurance competition.</p>\r\n        <Portraits houseguests={final3} />\r\n        <Portrait houseguest={enduranceWinner} />\r\n        <p>\r\n          <b>{`${enduranceWinner.name} has won the endurance competition!`}</b>\r\n        </p>\r\n        <hr />\r\n        <p>{`${enduranceLosers[0].name} and ${\r\n          enduranceLosers[1].name\r\n        } compete in the skill competition.`}</p>\r\n        <Portraits houseguests={enduranceLosers} />\r\n        <Portrait houseguest={skillWinner} />\r\n        <p>\r\n          <b>{`${skillWinner.name} has won the skill competition!`}</b>\r\n        </p>\r\n        <hr />\r\n        <p>{`${enduranceWinner.name} and ${\r\n          skillWinner.name\r\n        } compete in the quiz competition.`}</p>\r\n        <Portraits houseguests={[enduranceWinner, skillWinner]} />\r\n        <Portrait houseguest={finalHoH} />\r\n        <p>\r\n          <b>{`Congratulations ${\r\n            finalHoH.name\r\n          }, you are the final Head of Household!`}</b>\r\n        </p>\r\n        <NextEpisodeButton />\r\n      </div>\r\n    )\r\n  };\r\n  newGameState.phase++;\r\n  return [new GameState(newGameState), scene, finalHoH];\r\n}\r\n\r\nfunction finalEvictionScene(\r\n  initialGameState: GameState,\r\n  HoH: Houseguest\r\n): [GameState, Scene] {\r\n  const newGameState = new MutableGameState(initialGameState);\r\n  const nominees = nonEvictedHouseguests(newGameState).filter(\r\n    hg => hg.id !== HoH.id\r\n  );\r\n  const vote = castEvictionVote(HoH, nominees, newGameState);\r\n  const evictee = nominees[vote];\r\n  evictHouseguest(newGameState, evictee.id);\r\n  const scene: Scene = {\r\n    title: \"Final Eviction\",\r\n    gameState: newGameState,\r\n    render: (\r\n      <div>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          {`As the final HoH of the season, ${\r\n            HoH.name\r\n          }, you may now cast the sole vote to evict.`}\r\n          <Portrait houseguest={HoH} centered={true} />\r\n          <b>\r\n            <p>{`I vote to evict ${evictee.name}.`}</p>\r\n          </b>\r\n          <Portraits houseguests={nominees} centered={true} />\r\n          <p>\r\n            It's official... {evictee.name}, you will be the final person\r\n            leaving the Big Brother House.\r\n          </p>\r\n        </div>\r\n        <NextEpisodeButton />\r\n      </div>\r\n    )\r\n  };\r\n  return [new GameState(newGameState), scene];\r\n}\r\n\r\nfunction juryVoteScene(initialGameState: GameState): Scene {\r\n  const jurors = getJurors(initialGameState);\r\n  const finalists = nonEvictedHouseguests(initialGameState);\r\n  let voteCount = [0, 0];\r\n  const votes = jurors.map(juror => {\r\n    const result = castJuryVote(juror, finalists);\r\n    voteCount[result]++;\r\n    return result;\r\n  });\r\n  const voteBlocks = [];\r\n\r\n  // TODO: the formatting on this episode sucks...\r\n  for (let i = 0; i < votes.length; i++) {\r\n    voteBlocks.push(\r\n      <div className=\"columns\" key={`jury-vote${i}`}>\r\n        <Portrait houseguest={jurors[i]} />\r\n        <p>\r\n          <b>{`${jurors[i].name} has voted for...`}</b>\r\n        </p>\r\n        <Portrait houseguest={finalists[votes[i]]} />\r\n      </div>\r\n    );\r\n  }\r\n  const winner = voteCount[0] > voteCount[1] ? finalists[0] : finalists[1];\r\n\r\n  const scene: Scene = {\r\n    title: \"Jury Votes\",\r\n    gameState: initialGameState,\r\n    render: (\r\n      <div>\r\n        {voteBlocks}\r\n        <Portrait houseguest={winner} />\r\n        {`Congratulations, ${\r\n          winner.name\r\n        }, you are the winner of Big Brother!!!`}\r\n      </div>\r\n    )\r\n  };\r\n  return scene;\r\n}\r\n\r\nexport class BigBrotherFinaleEpisode implements Episode {\r\n  readonly title: string;\r\n  readonly scenes: Scene[] = [];\r\n  readonly render: JSX.Element;\r\n  readonly gameState: GameState;\r\n  readonly type = BigBrotherFinale;\r\n\r\n  public constructor(initialGameState: GameState) {\r\n    this.title = \"Finale\";\r\n    this.render = (\r\n      <div>\r\n        {/* TODO: custom title here*/}\r\n        Finale Night\r\n        <MemoryWall houseguests={initialGameState.houseguests} /> <br />\r\n        <NextEpisodeButton />\r\n      </div>\r\n    );\r\n    let currentGameState;\r\n    let hohCompScene;\r\n    let finalHoH;\r\n    [currentGameState, hohCompScene, finalHoH] = finalHohCompScene(\r\n      initialGameState\r\n    );\r\n    this.scenes.push(hohCompScene);\r\n    let finalEviction;\r\n    [currentGameState, finalEviction] = finalEvictionScene(\r\n      currentGameState,\r\n      finalHoH\r\n    );\r\n    this.scenes.push(finalEviction);\r\n\r\n    let voteScene;\r\n    voteScene = juryVoteScene(currentGameState);\r\n    this.scenes.push(voteScene);\r\n\r\n    this.gameState = currentGameState;\r\n  }\r\n}\r\n","export class PriorityQueue {\r\n  parent = (i: number) => ((i + 1) >>> 1) - 1;\r\n  left = (i: number) => (i << 1) + 1;\r\n  right = (i: number) => (i + 1) << 1;\r\n  _heap: any[];\r\n  _comparator: (a: any, b: any) => boolean;\r\n  constructor(comparator = (a: any, b: any) => a > b) {\r\n    this._heap = [];\r\n    this._comparator = comparator;\r\n  }\r\n  size() {\r\n    return this._heap.length;\r\n  }\r\n  isEmpty() {\r\n    return this.size() == 0;\r\n  }\r\n  peek() {\r\n    return this._heap[0];\r\n  }\r\n  push(...values: any[]) {\r\n    values.forEach(value => {\r\n      this._heap.push(value);\r\n      this._siftUp();\r\n    });\r\n    return this.size();\r\n  }\r\n  pop() {\r\n    const poppedValue = this.peek();\r\n    const bottom = this.size() - 1;\r\n    if (bottom > 0) {\r\n      this._swap(0, bottom);\r\n    }\r\n    this._heap.pop();\r\n    this._siftDown();\r\n    return poppedValue;\r\n  }\r\n  replace(value: any) {\r\n    const replacedValue = this.peek();\r\n    this._heap[0] = value;\r\n    this._siftDown();\r\n    return replacedValue;\r\n  }\r\n  _greater(i: number, j: number) {\r\n    return this._comparator(this._heap[i], this._heap[j]);\r\n  }\r\n  _swap(i: number, j: number) {\r\n    [this._heap[i], this._heap[j]] = [this._heap[j], this._heap[i]];\r\n  }\r\n  _siftUp() {\r\n    let node = this.size() - 1;\r\n    while (node > 0 && this._greater(node, this.parent(node))) {\r\n      this._swap(node, this.parent(node));\r\n      node = this.parent(node);\r\n    }\r\n  }\r\n  _siftDown() {\r\n    let node = 0;\r\n    while (\r\n      (this.left(node) < this.size() && this._greater(this.left(node), node)) ||\r\n      (this.right(node) < this.size() && this._greater(this.right(node), node))\r\n    ) {\r\n      let maxChild =\r\n        this.right(node) < this.size() &&\r\n        this._greater(this.right(node), this.left(node))\r\n          ? this.right(node)\r\n          : this.left(node);\r\n      this._swap(node, maxChild);\r\n      node = maxChild;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  GameState,\r\n  MutableGameState,\r\n  calculatePopularity,\r\n  nonEvictedHouseguests,\r\n  getById\r\n} from \"../gameState\";\r\nimport { Episode, Houseguest } from \"..\";\r\nimport { EpisodeType } from \"./episodes\";\r\nimport {\r\n  BigBrotherVanilla,\r\n  BigBrotherVanillaEpisode\r\n} from \"./bigBrotherEpisode\";\r\nimport { BigBrotherFinale, BigBrotherFinaleEpisode } from \"./bigBrotherFinale\";\r\nimport { rng, roundTwoDigits } from \"../../utils\";\r\nimport { PriorityQueue } from \"../../utils/heap\";\r\nimport { juryEquity } from \"../../utils/aiUtils\";\r\n\r\nfunction firstImpressions(houseguests: Houseguest[]) {\r\n  for (let i = 0; i < houseguests.length; i++) {\r\n    const iMap = houseguests[i].relationships;\r\n    for (let j = i + 1; j < houseguests.length; j++) {\r\n      // creates a bunch of 100% random mutual relationships\r\n      const jMap = houseguests[j].relationships;\r\n      const impression = rng().randomFloat();\r\n      jMap[i] = impression;\r\n      iMap[j] = impression;\r\n    }\r\n  }\r\n}\r\n\r\nfunction updatePopularity(gameState: GameState) {\r\n  const houseguests = nonEvictedHouseguests(gameState);\r\n  const heap = new PriorityQueue((a, b) => a[1] > b[1]);\r\n  houseguests.forEach(hg => {\r\n    const result = calculatePopularity(hg, nonEvictedHouseguests(gameState));\r\n    hg.deltaPopularity =\r\n      (roundTwoDigits(result) - roundTwoDigits(hg.popularity)) / 100;\r\n    hg.popularity = result;\r\n    heap.push([hg, juryEquity(hg, hg, gameState)]);\r\n  });\r\n  const houseSize = heap.size();\r\n  while (heap.size() > 0) {\r\n    const currentHg: Houseguest = getById(gameState, heap.pop()[0].id);\r\n    currentHg.relativeEquity = (heap.size() + 1) / houseSize;\r\n  }\r\n}\r\n\r\nexport class EpisodeFactory {\r\n  public nextEpisode(gameState: GameState, episodeType: EpisodeType): Episode {\r\n    let newState = new MutableGameState(gameState);\r\n    if (gameState.phase === 0) {\r\n      firstImpressions(newState.houseguests);\r\n    }\r\n    updatePopularity(newState);\r\n    const finalState = new GameState(newState);\r\n    switch (episodeType) {\r\n      case BigBrotherVanilla:\r\n        return new BigBrotherVanillaEpisode(finalState);\r\n      case BigBrotherFinale:\r\n        return new BigBrotherFinaleEpisode(finalState);\r\n      default:\r\n        throw new Error(\"Unsupported Episode Type\");\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { GameState } from \"../gameState\";\r\n\r\nexport interface Episode {\r\n  readonly scenes: Scene[];\r\n  readonly title: string;\r\n  readonly render: JSX.Element;\r\n  readonly gameState: GameState;\r\n  readonly type: EpisodeType;\r\n}\r\n\r\nexport interface EpisodeType {\r\n  readonly canPlayWith: (n: number) => boolean;\r\n  readonly eliminates: number;\r\n}\r\n\r\nexport class Scene {\r\n  readonly title: string = \"\";\r\n  readonly gameState: GameState = new GameState([]);\r\n  readonly render: JSX.Element = (\r\n    <div>{`Error while rendering ${this.title}`}</div>\r\n  );\r\n  public constructor(init: Partial<Scene>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Episode, Scene, GameState } from \"../../model\";\r\nimport { SidebarController, newEpisode } from \"./sidebarController\";\r\nimport { PregameEpisode } from \"../../model/episode/pregameEpisode\";\r\ninterface SidebarState {\r\n  episodes: Episode[];\r\n  selectedScene: number;\r\n}\r\n\r\nexport class Sidebar extends React.Component<{}, SidebarState> {\r\n  private controller: SidebarController;\r\n  public constructor(props: {}) {\r\n    super(props);\r\n    this.controller = new SidebarController(this);\r\n    this.state = { episodes: [], selectedScene: 0 };\r\n    newEpisode(new PregameEpisode(new GameState([])));\r\n  }\r\n\r\n  public componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.controller.handleKeyDown);\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.controller.destroy();\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"box\" style={{ minWidth: 140 }}>\r\n        {this.getEpisodes()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private getHighlight(title: string, key: number) {\r\n    if (key === this.state.selectedScene) {\r\n      return <mark>{title}</mark>;\r\n    }\r\n    return title;\r\n  }\r\n\r\n  private getEpisodes() {\r\n    const result: JSX.Element[] = [];\r\n    // Weird OBOE to make keys start at 0\r\n    let episodeKey = -1;\r\n    let breakKey = 0;\r\n    this.state.episodes.forEach((episode: Episode) => {\r\n      const id = ++episodeKey;\r\n      result.push(\r\n        <b\r\n          key={id}\r\n          onClick={() => {\r\n            this.controller.switchToScene(id);\r\n          }}\r\n        >\r\n          {this.getHighlight(episode.title, id)}\r\n        </b>\r\n      );\r\n      result.push(<br key={--breakKey} />);\r\n      episode.scenes.forEach((scene: Scene) => {\r\n        const id = ++episodeKey;\r\n        if (this.controller.getSelectedEpisode() === episode.gameState.phase) {\r\n          result.push(\r\n            <a key={id} onClick={() => this.controller.switchToScene(id)}>\r\n              {this.getHighlight(scene.title, id)}\r\n            </a>\r\n          );\r\n          result.push(<br key={--breakKey} />);\r\n        }\r\n      });\r\n    });\r\n    return result;\r\n  }\r\n}\r\n","import \"./mainPage.scss\";\r\nimport React from \"react\";\r\nimport { Sidebar } from \"../sidebar/sidebar\";\r\nimport { Topbar } from \"../topbar/topBar\";\r\nimport { MainContentArea } from \"./mainContentArea\";\r\nimport { MainPageController } from \"./mainPageController\";\r\n\r\ninterface MainPageProps {\r\n  controller: MainPageController;\r\n}\r\n\r\nexport class MainPage extends React.Component<MainPageProps, any> {\r\n  public constructor(props: MainPageProps) {\r\n    super(props);\r\n    props.controller.inject(this);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"main-page\">\r\n        <Topbar />\r\n        <div className=\"columns\">\r\n          <div className=\"column is-narrow\">\r\n            <Sidebar />\r\n          </div>\r\n          <div className=\"column\">\r\n            <MainContentArea />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { MainPage } from \"./components/mainPage/mainPage\";\r\nimport { MainPageController } from \"./components/mainPage/mainPageController\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return <MainPage controller={new MainPageController()} />;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}