{"version":3,"sources":["model/playerProfile.ts","model/houseguest.ts","utils/utilities.ts","utils/relationshipMap.ts","components/mainPage/mainPageController.ts","utils/BbRandomGenerator.ts","components/playerPortrait/houseguestPortrait.tsx","components/playerPortrait/portraits.tsx","components/memoryWall/memoryWall.tsx","components/playerPortrait/setupPortrait.tsx","components/castingScreen/importLinks.tsx","model/episode/pregameEpisode.tsx","components/castingScreen/castingScreen.tsx","components/topbar/topBar.tsx","components/pregameScreen/pregameScreen.tsx","components/mainPage/mainContentArea.tsx","components/sidebar/sidebarController.ts","components/buttons/nextEpisodeButton.tsx","utils/aiUtils.ts","model/gameState.ts","model/season.ts","model/episode/bigBrotherEpisode.tsx","model/episode/bigBrotherFinale.tsx","utils/heap.ts","model/episode/episodeFactory.ts","model/episode/episodes.tsx","components/sidebar/sidebar.tsx","components/mainPage/mainPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["PlayerProfile","init","Object","classCallCheck","this","name","imageURL","evictedImageURL","assign","Houseguest","_PlayerProfile","_this","possibleConstructorReturn","getPrototypeOf","call","isEvicted","isJury","id","nominations","hohWins","povWins","popularity","relativePopularity","deltaPopularity","relationships","assertThisInitialized","inherits","roundTwoDigits","number","Math","round","newRelationshipMap","size","exclude","result","i","cast$","BehaviorSubject","getCast","value","MainPageController","view","MainPage","controller","createClass","key","page","BbRandomGenerator","seed","rng","prand","xorshift128plus","_this$rng$next","next","_this$rng$next2","slicedToArray","a","b","_prand$uniformIntDist","uniformIntDistribution","_prand$uniformIntDist2","rng$","subscribe","cast","castNames","forEach","houseguest","string","hash","length","charCodeAt","hashcode","componentToHex","c","hex","toString","maxPopularity","r","g","minPopularity","backgroundColor","props","percent","undefined","houseguestToPortrait","subtitle","push","concat","react_default","createElement","houseguestPortrait_HouseguestPortrait","HouseguestPortrait","imageSrc","imageClass","realSubtitle","uniqueKey","text","className","style","src","width","height","Portrait","centered","Portraits","rows","houseguests","detailed","popularitySubtitle","roundedDeltaPop","memoryWallPortrait","MemoryWall","margin","maxWidth","getPlayers","SetupPortrait","_React$Component","state","setState","_this2","textAlign","onDoubleClick","onDelete","imageUrl","contentEditable","onChange","spellCheck","React","Component","ImportLinks","lines","split","profiles","line","temp","pop","replace","substr","indexOf","onSubmit","event","target","onClick","PregameEpisodeType","eliminates","canPlayWith","n","PregameEpisode","gameState","title","scenes","render","type","PregameScreen","CastingScreen","appendProfiles","newState","objectSpread","profile","players","submit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","newCast","mainContentStream$","newEpisode","GameState","stop","handleDrop","files","file","match","lastIndexOf","URL","createObjectURL","newName","_this3","splice","_this4","player","setupPortrait_SetupPortrait","deleteMethod","handleChange","amount","shuffle","slice","_this5","FileDrop","onDrop","importLinks_ImportLinks","random","disabled","getFiles","EditCastLink","castingScreen_CastingScreen","EditSeasonLink","Topbar","marginTop","NextEpisodeButton","MainContentArea","contentStream","content","unsubscribe","episodes$","switchEpisode$","Subject","episode","switchSceneRelative","SidebarController","subscriptions","season","Season","selectedEpisode","delta","selectedScene","renderedScenes","targetScene","lastEpisode","episodes","switchToScene","currentGameState","newPlayerCount","nonEvictedHouseguests","nextEpisodeType","whichEpisodeType","renderEpisode","onNewEpisode","scene","index","keyCode","sub","relationship","hero","villain","highestScore","options","callback","highestIndex","Infinity","currentScore","threatScore","juryThreatWeight","remainingPlayers","getJuryCount","inJury","getJurors","finalJurySize","jurors","juryWeight","houseWeight","calculatePopularity","juryEquity","castEvictionVote","nominees","nominatePlayer","castJuryVote","juror","finalists","BigBrotherVanilla","generateVetoCeremonyScene","initialGameState","HoH","initialNominees","povWinner","povTarget","descisionText","getById","save","threat0","threat1","min","useGoldenVeto","replacementSpeech","nameAReplacement","finalNominees","filter","hg","replacementNom","evictHouseguest","BigBrotherVanillaEpisode","hohCompScene","hoh","nomCeremonyScene","_generateHohCompScene","newGameState","MutableGameState","previousHoh","previousHOH","newHoH","randomPlayer","phase","generateHohCompScene","_generateHohCompScene2","vetoCompScene","_generateNomCeremonyS","nom1","nom2","noms","generateNomCeremonyScene","_generateNomCeremonyS2","vetoCeremonyScene","_generateVetoCompScen","choices","povPlayers","everyoneWillPlay","introText","extras","generateVetoCompScene","_generateVetoCompScen2","evictionScene","_generateVetoCeremony","_generateVetoCeremony2","_generateEvictionScen","votes","evictee","votesFor0","votesFor1","tieVote","tieBreaker","voteCountText","generateEvictionScene","_generateEvictionScen2","BigBrotherFinale","BigBrotherFinaleEpisode","finalHoH","finalEviction","_finalHohCompScene","final3","enduranceWinner","enduranceLosers","skillWinner","finalHohCompScene","_finalHohCompScene2","voteScene","_finalEvictionScene","finalEvictionScene","_finalEvictionScene2","voteCount","map","voteBlocks","winner","juryVoteScene","PriorityQueue","comparator","arguments","parent","left","right","_heap","_comparator","_len","values","Array","_key","_siftUp","poppedValue","peek","bottom","_swap","_siftDown","replacedValue","j","_ref","node","_greater","maxChild","EpisodeFactory","episodeType","iMap","jMap","impression","randomFloat","firstImpressions","heap","houseSize","updatePopularity","finalState","Error","factory","nextEpisode","find","inclusions","exclusions","excludedIds","includes","randomInt","house","sum","count","targetId","x","xSquared","extremeValues","copy","_","cloneDeep","Sidebar","document","addEventListener","handleKeyDown","destroy","minWidth","getEpisodes","episodeKey","breakKey","getHighlight","getSelectedEpisode","inject","sidebar_Sidebar","mainContentArea_MainContentArea","App","mainPage_MainPage","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","console","log","onUpdate","onSuccess","catch","error","ReactDOM","src_App","getElementById","process","href","origin","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f579f8d8.chunk.js","sourcesContent":["export class PlayerProfile {\r\n  readonly name: string = \"\";\r\n  readonly imageURL: string = \"\";\r\n  readonly evictedImageURL: string = \"BW\";\r\n  constructor(init: PlayerProfile) {\r\n    if (!init) {\r\n      return;\r\n    }\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n","import { PlayerProfile } from \"./playerProfile\";\r\nimport { RelationshipMap } from \"../utils\";\r\n\r\nexport class Houseguest extends PlayerProfile {\r\n  public isEvicted: boolean = false;\r\n  public isJury: boolean = false;\r\n\r\n  readonly id: number = 0;\r\n\r\n  public nominations: number = 0;\r\n  public hohWins: number = 0;\r\n  public povWins: number = 0;\r\n\r\n  // Popularity ranges from -1 to 1\r\n  public popularity: number = 0;\r\n  public relativePopularity: number = 0;\r\n  public deltaPopularity: number = 0;\r\n  readonly relationships: RelationshipMap = {};\r\n\r\n  constructor(init: Houseguest) {\r\n    super(init);\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n","// spits out the next episode given a gamestate, in addition to the new gamestate.\r\n// allows for re-use, because you can give it the initial gamestate, and then just keep asking for the next season.\r\nexport function hashcode(string: string): number {\r\n  var hash = 0,\r\n    i,\r\n    chr;\r\n  if (string.length === 0) return hash;\r\n  for (i = 0; i < string.length; i++) {\r\n    chr = string.charCodeAt(i);\r\n    hash = (hash << 5) - hash + chr;\r\n    hash |= 0;\r\n  }\r\n  return hash;\r\n}\r\n\r\nexport function roundTwoDigits(number: number) {\r\n  return Math.round(number * 100);\r\n}\r\n","export interface RelationshipMap {\r\n  [id: number]: number;\r\n}\r\n\r\nexport function newRelationshipMap(\r\n  size: number,\r\n  exclude: number\r\n): RelationshipMap {\r\n  const result: RelationshipMap = {};\r\n  for (let i = 0; i < size; i++) {\r\n    if (i !== exclude) result[i] = 0;\r\n  }\r\n  return result;\r\n}\r\n","import { MainPage } from \"./mainPage\";\r\nimport { PlayerProfile } from \"../../model\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\nexport const cast$ = new BehaviorSubject<PlayerProfile[]>([]);\r\n\r\nexport function updateCast(newCast: PlayerProfile[]) {\r\n  cast$.next(newCast);\r\n}\r\n\r\nexport function getCast(): PlayerProfile[] {\r\n  return cast$.value;\r\n}\r\n\r\nexport class MainPageController {\r\n  private view: MainPage = new MainPage({ controller: this });\r\n\r\n  public inject(page: MainPage) {\r\n    this.view = page;\r\n  }\r\n}\r\n","import prand from \"pure-rand\";\r\nimport { cast$ } from \"../components/mainPage/mainPageController\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { hashcode } from \"./utilities\";\r\n\r\nexport class BbRandomGenerator {\r\n  private rng: prand.RandomGenerator;\r\n\r\n  public randomFloat(): number {\r\n    let result: number;\r\n    [result, this.rng] = this.rng.next();\r\n    return result / 2147483647.0;\r\n  }\r\n\r\n  public randomInt(a: number, b: number): number {\r\n    let result: number;\r\n    [result, this.rng] = prand.uniformIntDistribution(a, b, this.rng);\r\n    return result;\r\n  }\r\n\r\n  public seed(seed: number) {\r\n    this.rng = prand.xorshift128plus(seed);\r\n  }\r\n\r\n  public constructor(seed: number) {\r\n    this.rng = prand.xorshift128plus(seed);\r\n  }\r\n}\r\n\r\nexport function rng() {\r\n  return rng$.value;\r\n}\r\n\r\nconst rng$ = new BehaviorSubject(new BbRandomGenerator(0));\r\n\r\nconst castSub = cast$.subscribe({\r\n  next: cast => {\r\n    let castNames = \"\";\r\n    cast.forEach(houseguest => (castNames += houseguest.name));\r\n    rng$.next(new BbRandomGenerator(hashcode(castNames)));\r\n  }\r\n});\r\n","import React from \"react\";\r\nimport { ProfileHouseguest } from \"../memoryWall\";\r\nimport { roundTwoDigits } from \"../../utils\";\r\n\r\nfunction componentToHex(c: any) {\r\n  var hex = Math.round(c).toString(16);\r\n  return hex.length == 1 ? \"0\" + hex : hex;\r\n}\r\n\r\nconst maxPopularity = { r: 137, g: 252, b: 137 };\r\nconst minPopularity = { r: 252, g: 137, b: 137 };\r\n\r\nfunction rgbToHex(r: any, g: any, b: any) {\r\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\nexport interface PortraitProps {\r\n  evictedImageURL: string;\r\n  imageURL: string;\r\n  name: string;\r\n  isEvicted?: boolean;\r\n  isJury?: boolean;\r\n  popularity?: number;\r\n  subtitle?: string[];\r\n  tags?: string[];\r\n}\r\n\r\nfunction backgroundColor(props: PortraitProps) {\r\n  const percent = props.popularity ? (props.popularity + 1) / 2 : 0.5;\r\n\r\n  return props.isEvicted\r\n    ? undefined\r\n    : rgbToHex(\r\n        minPopularity.r + percent * (maxPopularity.r - minPopularity.r),\r\n        minPopularity.g + percent * (maxPopularity.g - minPopularity.g),\r\n        minPopularity.b + percent * (maxPopularity.b - minPopularity.b)\r\n      );\r\n}\r\n\r\nexport function houseguestToPortrait(\r\n  houseguest: ProfileHouseguest,\r\n  key?: any\r\n): JSX.Element {\r\n  let subtitle = [];\r\n  if (houseguest.popularity && !houseguest.isEvicted) {\r\n    subtitle.push(roundTwoDigits(houseguest.popularity) + \"%\");\r\n  }\r\n  subtitle.push(`${compWins()}`);\r\n  return (\r\n    <HouseguestPortrait\r\n      evictedImageURL={houseguest.evictedImageURL}\r\n      imageURL={houseguest.imageURL}\r\n      name={houseguest.name}\r\n      isEvicted={houseguest.isEvicted}\r\n      isJury={houseguest.isJury}\r\n      key={key}\r\n      popularity={houseguest.popularity}\r\n      subtitle={subtitle}\r\n    />\r\n  );\r\n\r\n  function compWins(): string {\r\n    return `${houseguest.hohWins ? `♔ ${houseguest.hohWins}` : \"\"}${\r\n      houseguest.povWins && houseguest.hohWins\r\n        ? `|🛇 ${houseguest.povWins}`\r\n        : houseguest.povWins\r\n        ? `🛇 ${houseguest.povWins}`\r\n        : \"\"\r\n    }${\r\n      (houseguest.hohWins || houseguest.povWins) && houseguest.nominations\r\n        ? \"|\"\r\n        : \"\"\r\n    }${houseguest.nominations ? `✘ ${houseguest.nominations}` : \"\"}`;\r\n  }\r\n}\r\n\r\nexport const HouseguestPortrait = (props: PortraitProps) => {\r\n  const evictedImageURL =\r\n    props.evictedImageURL === \"BW\" ? props.imageURL : props.evictedImageURL;\r\n\r\n  const imageSrc = props.isEvicted ? evictedImageURL : props.imageURL;\r\n\r\n  let imageClass =\r\n    props.isEvicted && props.evictedImageURL === \"BW\" ? \"grayscale\" : \"\";\r\n\r\n  imageClass = props.isJury ? \"sepia\" : imageClass;\r\n\r\n  const realSubtitle: any[] = [];\r\n  let uniqueKey = -1;\r\n  if (props.subtitle) {\r\n    props.subtitle.forEach(text => {\r\n      realSubtitle.push(text);\r\n      realSubtitle.push(<br key={`break-${uniqueKey++}`} />);\r\n    });\r\n  }\r\n  let className = \"\";\r\n  if (props.isJury) {\r\n    className = \"jury\";\r\n  } else if (props.isEvicted) {\r\n    className = \"evicted\";\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: backgroundColor(props)\r\n      }}\r\n      className={`memory-wall-portrait ${className}`}\r\n    >\r\n      <img\r\n        className={imageClass}\r\n        src={imageSrc}\r\n        style={{ width: 100, height: 100 }}\r\n      />\r\n      <br />\r\n      {props.name}\r\n      <br />\r\n      {!!props.subtitle && (\r\n        <small className=\"portrait-history\">{realSubtitle}</small>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  ProfileHouseguest,\r\n  houseguestToPortrait,\r\n  HouseguestPortrait\r\n} from \"../memoryWall\";\r\nimport React from \"react\";\r\nimport { roundTwoDigits } from \"../../utils\";\r\n\r\nexport function memoryWallPortrait(\r\n  houseguest: ProfileHouseguest,\r\n  key?: any\r\n): JSX.Element {\r\n  let subtitle = [];\r\n  if (houseguest.popularity && !houseguest.isEvicted) {\r\n    let popularitySubtitle = `${roundTwoDigits(houseguest.popularity)}%`;\r\n    const roundedDeltaPop = houseguest.deltaPopularity\r\n      ? roundTwoDigits(houseguest.deltaPopularity)\r\n      : 0;\r\n    if (roundedDeltaPop !== 0) {\r\n      const arrow = roundedDeltaPop > 0 ? \" | ↑\" : \" | ↓\";\r\n      popularitySubtitle += `${arrow} ${roundedDeltaPop}%`;\r\n    }\r\n    subtitle.push(popularitySubtitle);\r\n  }\r\n  subtitle.push(`${compWins()}`);\r\n\r\n  return (\r\n    <HouseguestPortrait\r\n      evictedImageURL={houseguest.evictedImageURL}\r\n      imageURL={houseguest.imageURL}\r\n      name={houseguest.name}\r\n      isJury={houseguest.isJury}\r\n      isEvicted={houseguest.isEvicted}\r\n      key={key}\r\n      popularity={houseguest.popularity}\r\n      subtitle={subtitle}\r\n    />\r\n  );\r\n\r\n  function compWins(): string {\r\n    return `${houseguest.hohWins ? `♔ ${houseguest.hohWins}` : \"\"}${\r\n      houseguest.povWins && houseguest.hohWins\r\n        ? `|🛇 ${houseguest.povWins}`\r\n        : houseguest.povWins\r\n        ? `🛇 ${houseguest.povWins}`\r\n        : \"\"\r\n    }${\r\n      (houseguest.hohWins || houseguest.povWins) && houseguest.nominations\r\n        ? \"|\"\r\n        : \"\"\r\n    }${houseguest.nominations ? `✘ ${houseguest.nominations}` : \"\"}`;\r\n  }\r\n}\r\n\r\nexport function Portrait(props: {\r\n  houseguest: ProfileHouseguest;\r\n  centered?: boolean;\r\n}): JSX.Element {\r\n  return (\r\n    <div\r\n      className={`columns is-gapless is-mobile is-multiline ${props.centered &&\r\n        \"is-centered\"}`}\r\n    >\r\n      {houseguestToPortrait(props.houseguest)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Portraits(props: {\r\n  houseguests: ProfileHouseguest[];\r\n  centered?: boolean;\r\n  detailed?: boolean;\r\n}): JSX.Element {\r\n  let key = 0;\r\n  const rows: JSX.Element[] = [];\r\n  if (!props.houseguests || props.houseguests.length === 0) {\r\n    return <div />;\r\n  }\r\n  props.houseguests.forEach((houseguest: ProfileHouseguest) => {\r\n    if (props.detailed) {\r\n      rows.push(memoryWallPortrait(houseguest, key++));\r\n    } else {\r\n      rows.push(houseguestToPortrait(houseguest, key++));\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={`columns is-gapless is-mobile is-multiline ${props.centered &&\r\n        \"is-centered\"}`}\r\n    >\r\n      {rows}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./memoryWall.scss\";\r\nimport { PlayerProfile } from \"../../model\";\r\nimport { Portraits } from \"../playerPortrait/portraits\";\r\nexport interface IMemoryWallProps {\r\n  readonly houseguests: ProfileHouseguest[];\r\n}\r\n\r\nexport interface ProfileHouseguest extends PlayerProfile {\r\n  isEvicted?: boolean;\r\n  isJury?: boolean;\r\n  popularity?: number;\r\n  deltaPopularity?: number;\r\n  hohWins?: number;\r\n  povWins?: number;\r\n  nominations?: number;\r\n}\r\n\r\nexport function MemoryWall(props: IMemoryWallProps): JSX.Element {\r\n  return <div className=\"memory-wall\">{getPlayers(props)}</div>;\r\n}\r\n\r\nfunction getPlayers(props: IMemoryWallProps): any {\r\n  if (!props.houseguests || props.houseguests.length === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"auto\",\r\n        maxWidth: props.houseguests.length < 30 ? 700 : -1\r\n      }}\r\n    >\r\n      <Portraits\r\n        houseguests={props.houseguests}\r\n        centered={true}\r\n        detailed={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\ninterface SetupPortraitProps {\r\n  name: string;\r\n  imageUrl: string;\r\n  onDelete: () => void;\r\n  onChange: (arg0: Event) => void;\r\n}\r\n\r\ninterface SetupPortraitState {\r\n  name: string;\r\n}\r\n\r\nexport class SetupPortrait extends React.Component<\r\n  SetupPortraitProps,\r\n  SetupPortraitState\r\n> {\r\n  // TODO: When you click on the text, you can edit the text.\r\n\r\n  public constructor(props: SetupPortraitProps) {\r\n    super(props);\r\n    this.state = { name: props.name };\r\n  }\r\n\r\n  public componentWillReceiveProps(props: SetupPortraitProps) {\r\n    this.setState({ name: props.name });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className={`edit-portrait`}>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <div\r\n            className=\"x-button noselect\"\r\n            onDoubleClick={() => this.props.onDelete()}\r\n          >\r\n            ✘\r\n          </div>\r\n          <img src={this.props.imageUrl} style={{ width: 100, height: 100 }} />\r\n          <br />\r\n          <input\r\n            className=\"memory-wall-portrait\"\r\n            contentEditable={true}\r\n            onChange={() => this.props.onChange}\r\n            spellCheck={false}\r\n            value={this.state.name}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { PlayerProfile } from \"../../model\";\r\n\r\ninterface ImportLinksProps {\r\n  onSubmit: (profiles: PlayerProfile[]) => void;\r\n  className?: string;\r\n}\r\n\r\nexport class ImportLinks extends React.Component<ImportLinksProps, any> {\r\n  public constructor(props: ImportLinksProps) {\r\n    super(props);\r\n    this.state = { text: \"\" };\r\n  }\r\n\r\n  private onSubmit() {\r\n    const lines = this.state.text.split(/\\r?\\n/);\r\n    // ugly, but it works.\r\n    const profiles: PlayerProfile[] = [];\r\n    lines.forEach((line: string) => {\r\n      const temp = line.split(\"/\").pop();\r\n      let name = temp\r\n        ? temp\r\n            .split(\"#\")[0]\r\n            .split(\"?\")[0]\r\n            .replace(/\\.[^/.]+$/, \"\")\r\n            .replace(/[-_]/g, \" \")\r\n        : null;\r\n\r\n      if (line.substr(0, line.indexOf(\" \"))) {\r\n        name = line.substr(line.indexOf(\" \") + 1);\r\n      }\r\n      if (name) {\r\n        profiles.push({\r\n          name,\r\n          imageURL: line,\r\n          evictedImageURL: \"BW\"\r\n        });\r\n      }\r\n    });\r\n    this.props.onSubmit(profiles);\r\n    this.setState({ text: \"\" });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className={this.props.className}>\r\n        <textarea\r\n          className=\"textarea\"\r\n          onChange={event => {\r\n            this.setState({ text: event.target.value });\r\n          }}\r\n          value={this.state.text}\r\n        />\r\n        <button onClick={() => this.onSubmit()}>Import links</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Episode, EpisodeType } from \"./episodes\";\r\nimport { PregameScreen } from \"../../components/pregameScreen/pregameScreen\";\r\nimport { GameState } from \"../gameState\";\r\n\r\nconst PregameEpisodeType: EpisodeType = {\r\n  eliminates: 0,\r\n  canPlayWith: (n: number) => {\r\n    return n > 2;\r\n  }\r\n};\r\n\r\nexport class PregameEpisode implements Episode {\r\n  readonly title = \"Pregame\";\r\n  readonly scenes = [];\r\n  readonly render: JSX.Element;\r\n  readonly gameState: GameState;\r\n  readonly type = PregameEpisodeType;\r\n\r\n  public constructor(gameState: GameState) {\r\n    this.gameState = gameState;\r\n    this.render = <PregameScreen cast={gameState.houseguests} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport FileDrop from \"react-file-drop\";\r\nimport { PlayerProfile, GameState } from \"../../model\";\r\nimport { SetupPortrait } from \"../playerPortrait/setupPortrait\";\r\nimport { ImportLinks } from \"./importLinks\";\r\nimport { updateCast } from \"../mainPage/mainPageController\";\r\nimport { mainContentStream$ } from \"../mainPage/mainContentArea\";\r\nimport { PregameScreen } from \"../pregameScreen/pregameScreen\";\r\nimport { newEpisode } from \"../sidebar/sidebarController\";\r\nimport { PregameEpisode } from \"../../model/episode/pregameEpisode\";\r\nimport { internals } from \"rx\";\r\nimport { shuffle } from \"lodash\";\r\n\r\ninterface CastingScreenState {\r\n  players: PlayerProfile[];\r\n}\r\n\r\ninterface CastingScreenProps {\r\n  cast?: PlayerProfile[];\r\n}\r\n\r\nexport class CastingScreen extends React.Component<\r\n  CastingScreenProps,\r\n  CastingScreenState\r\n> {\r\n  constructor(props: CastingScreenProps) {\r\n    super(props);\r\n    this.state = { players: props.cast || [] };\r\n  }\r\n\r\n  private handleChange(i: number) {\r\n    return (event: any) => {\r\n      const newName = event.target.value.replace(/\\r?\\n|\\r/g, \"\");\r\n      const newState = { ...this.state };\r\n      newState.players[i] = new PlayerProfile({\r\n        imageURL: newState.players[i].imageURL,\r\n        name: newName,\r\n        evictedImageURL: newState.players[i].evictedImageURL\r\n      });\r\n      this.setState(newState);\r\n    };\r\n  }\r\n\r\n  private deleteMethod(i: number) {\r\n    return () => {\r\n      const newState = { ...this.state };\r\n      newState.players.splice(i, 1);\r\n      this.setState(newState);\r\n    };\r\n  }\r\n\r\n  private getFiles() {\r\n    const players = this.state.players;\r\n\r\n    if (!players) {\r\n      return;\r\n    }\r\n\r\n    const rows: JSX.Element[] = [];\r\n    let i = 0;\r\n    players.forEach(player =>\r\n      rows.push(\r\n        <SetupPortrait\r\n          name={player.name}\r\n          imageUrl={player.imageURL}\r\n          onDelete={this.deleteMethod(i)}\r\n          onChange={this.handleChange(i)}\r\n          key={(++i).toString()}\r\n        />\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"columns is-gapless is-mobile is-multiline is-centered\">\r\n        {rows}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private appendProfiles = (profiles: PlayerProfile[]) => {\r\n    const newState = { ...this.state };\r\n    profiles.forEach(profile => newState.players.push(profile));\r\n    this.setState(newState);\r\n  };\r\n\r\n  private submit = async () => {\r\n    updateCast(this.state.players);\r\n    mainContentStream$.next(<PregameScreen cast={this.state.players} />);\r\n    await newEpisode(null);\r\n    await newEpisode(new PregameEpisode(new GameState(this.state.players)));\r\n  };\r\n\r\n  private random(amount: number) {\r\n    let players = this.state.players;\r\n    players = shuffle(players);\r\n    players = players.slice(0, amount);\r\n    this.setState({ players });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <FileDrop onDrop={this.handleDrop}>\r\n        <div className=\"level\">\r\n          <ImportLinks onSubmit={this.appendProfiles} />\r\n          <div className=\"level-item\">\r\n            <button\r\n              className=\"button is-danger\"\r\n              onClick={() => this.setState({ players: [] })}\r\n            >\r\n              Delete all\r\n            </button>\r\n          </div>\r\n          <div className=\"level-item\">\r\n            <div className=\" button is-primary\" onClick={() => this.random(16)}>\r\n              Random 16\r\n            </div>\r\n          </div>\r\n          <div className=\"level-item\">\r\n            <button\r\n              className=\"button is-primary\"\r\n              disabled={this.state.players.length < 3}\r\n              onClick={this.submit}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n        ~ Drop images ~{this.getFiles()}\r\n      </FileDrop>\r\n    );\r\n  }\r\n\r\n  private handleDrop = (files: FileList | null, event: React.DragEvent) => {\r\n    const newState = { ...this.state };\r\n\r\n    if (!files) {\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i];\r\n\r\n      if (file.type.match(/image\\/*/)) {\r\n        newState.players.push(\r\n          new PlayerProfile({\r\n            name: file.name.substr(0, file.name.lastIndexOf(\".\")) || file.name,\r\n            imageURL: URL.createObjectURL(file),\r\n            evictedImageURL: \"BW\"\r\n          })\r\n        );\r\n      }\r\n    }\r\n    this.setState(newState);\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { mainContentStream$ } from \"../mainPage/mainContentArea\";\r\nimport { CastingScreen } from \"../castingScreen/castingScreen\";\r\nimport \"./topBar.scss\";\r\nimport { getCast } from \"../mainPage/mainPageController\";\r\n\r\nexport function EditCastLink(): JSX.Element {\r\n  return (\r\n    <div\r\n      className=\"topbar-link\"\r\n      onClick={() => {\r\n        mainContentStream$.next(<CastingScreen cast={getCast()} />);\r\n      }}\r\n    >\r\n      Edit Cast\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function EditSeasonLink(): JSX.Element {\r\n  return (\r\n    <div\r\n      className=\"topbar-link\"\r\n      onClick={() => {\r\n        mainContentStream$.next(<CastingScreen cast={getCast()} />); // TODO: Proper edit season linking\r\n      }}\r\n    >\r\n      Edit Season\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Topbar(): JSX.Element {\r\n  return (\r\n    <div className=\"level box is-mobile\" style={{ marginTop: 30 }}>\r\n      <div className=\"level-item\">\r\n        <EditCastLink />\r\n      </div>\r\n      <div className=\"level-item\">\r\n        <EditSeasonLink />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { PlayerProfile } from \"../../model\";\r\nimport { MemoryWall } from \"../memoryWall\";\r\nimport { NextEpisodeButton } from \"../buttons/nextEpisodeButton\";\r\nimport { EditCastLink } from \"../topbar/topBar\";\r\n\r\ninterface PregameScreenProps {\r\n  cast: PlayerProfile[];\r\n}\r\n\r\nexport function PregameScreen(props: PregameScreenProps): JSX.Element {\r\n  if (props.cast.length === 0) {\r\n    return (\r\n      <div>\r\n        Cast is empty. <EditCastLink />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      Welcome to Big Brother!\r\n      <MemoryWall houseguests={props.cast} />\r\n      <NextEpisodeButton />\r\n    </div>\r\n  );\r\n  // TODO: Custom season title.\r\n}\r\n","import React from \"react\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { PregameScreen } from \"../pregameScreen/pregameScreen\";\r\n\r\nexport const mainContentStream$ = new BehaviorSubject(\r\n  <PregameScreen cast={[]} />\r\n);\r\n\r\nexport class MainContentArea extends React.Component<any, any> {\r\n  // a simple class that displays whatever it gets fed through the main content stream.\r\n\r\n  private contentStream: any;\r\n\r\n  public constructor(props: any) {\r\n    super(props);\r\n    this.state = { content: null };\r\n  }\r\n\r\n  public componentWillMount() {\r\n    this.contentStream = mainContentStream$.subscribe(content => {\r\n      this.setState({ content });\r\n    });\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.contentStream.unsubscribe();\r\n  }\r\n\r\n  public render() {\r\n    return <div className=\"box\">{this.state.content}</div>;\r\n  }\r\n}\r\n","import { Subject, Subscription, BehaviorSubject } from \"rxjs\";\r\nimport { Episode, Scene, nonEvictedHouseguests } from \"../../model\";\r\nimport { Sidebar } from \"./sidebar\";\r\nimport { Season } from \"../../model/season\";\r\nimport { mainContentStream$ } from \"../mainPage/mainContentArea\";\r\nimport { cast$ } from \"../mainPage/mainPageController\";\r\n\r\n// Null resets the season\r\nconst episodes$ = new BehaviorSubject<Episode | null>(null);\r\nconst switchEpisode$ = new Subject<number>();\r\n\r\nexport function newEpisode(episode: Episode | null) {\r\n  episodes$.next(episode);\r\n}\r\n\r\nexport function switchSceneRelative(n: number) {\r\n  switchEpisode$.next(n);\r\n}\r\n\r\ninterface IndexedScene {\r\n  scene: Scene;\r\n  index: number;\r\n}\r\n\r\nconst LEFT = 37;\r\nconst RIGHT = 39;\r\n\r\nexport class SidebarController {\r\n  private view: Sidebar;\r\n  private subscriptions: Subscription[] = [];\r\n  private season: Season = new Season();\r\n  private scenes: IndexedScene[] = [];\r\n  private selectedEpisode: number = 0;\r\n\r\n  public constructor(view: Sidebar) {\r\n    this.view = view;\r\n    this.subscriptions.push(\r\n      episodes$.subscribe({\r\n        next: episode => this.onNewEpisode(episode)\r\n      })\r\n    );\r\n    this.subscriptions.push(\r\n      switchEpisode$.subscribe({\r\n        next: (value: number) => this.switchSceneRelative(value)\r\n      })\r\n    );\r\n    this.subscriptions.push(\r\n      cast$.subscribe({\r\n        next: newCast => (this.season = new Season())\r\n      })\r\n    );\r\n  }\r\n\r\n  public getSelectedEpisode() {\r\n    return this.selectedEpisode;\r\n  }\r\n\r\n  public switchToScene(id: number) {\r\n    mainContentStream$.next(this.scenes[id].scene.render);\r\n    this.selectedEpisode = this.scenes[id].index;\r\n    this.view.setState({ selectedScene: id });\r\n  }\r\n\r\n  private switchSceneRelative = (delta: number) => {\r\n    const selectedScene = this.view.state.selectedScene;\r\n    const renderedScenes = this.scenes.length;\r\n    const targetScene = selectedScene + delta;\r\n\r\n    if (targetScene < 0) {\r\n      return;\r\n    }\r\n    const lastEpisode = this.view.state.episodes[\r\n      this.view.state.episodes.length - 1\r\n    ];\r\n\r\n    if (targetScene < renderedScenes) {\r\n      this.switchToScene(targetScene);\r\n    } else if (targetScene === renderedScenes) {\r\n      const currentGameState = lastEpisode.gameState;\r\n      const newPlayerCount = nonEvictedHouseguests(lastEpisode.gameState)\r\n        .length;\r\n      const nextEpisodeType = this.season.whichEpisodeType(newPlayerCount);\r\n      if (newPlayerCount > 2) {\r\n        newEpisode(\r\n          this.season.renderEpisode(currentGameState, nextEpisodeType)\r\n        );\r\n        this.switchSceneRelative(1);\r\n      }\r\n    }\r\n  };\r\n\r\n  public handleKeyDown(event: any) {\r\n    if (event.keyCode === LEFT) {\r\n      switchSceneRelative(-1);\r\n    } else if (event.keyCode === RIGHT) {\r\n      switchSceneRelative(1);\r\n    }\r\n  }\r\n\r\n  private onNewEpisode(episode: Episode | null) {\r\n    if (!episode) {\r\n      this.view.setState({ episodes: [], selectedScene: 0 });\r\n      this.scenes = [];\r\n    } else {\r\n      const newState = { ...this.view.state };\r\n      // starts at -1: prevent OBOE\r\n      const latestIndex =\r\n        this.scenes.length === 0\r\n          ? -1\r\n          : this.scenes[this.scenes.length - 1].index;\r\n      const index = latestIndex + 1;\r\n      this.scenes.push({ scene: episode, index });\r\n      episode.scenes.forEach(scene => this.scenes.push({ scene, index }));\r\n      newState.episodes.push(episode);\r\n      this.view.setState(newState);\r\n    }\r\n  }\r\n\r\n  public destroy() {\r\n    this.subscriptions.forEach(sub => sub.unsubscribe());\r\n  }\r\n}\r\n","import { switchSceneRelative } from \"../sidebar/sidebarController\";\r\nimport React from \"react\";\r\n\r\nexport function NextEpisodeButton(): JSX.Element {\r\n  return (\r\n    <button\r\n      className=\"button is-primary\"\r\n      onClick={() => switchSceneRelative(1)}\r\n    >\r\n      Continue\r\n    </button>\r\n  );\r\n}\r\n","import {\r\n  Houseguest,\r\n  nonEvictedHouseguests,\r\n  GameState,\r\n  getJurors,\r\n  inJury,\r\n  calculatePopularity,\r\n  exclude\r\n} from \"../model\";\r\nimport { rng } from \".\";\r\nimport {\r\n  getFinalists,\r\n  getJuryCount as finalJurySize,\r\n  getJuryCount\r\n} from \"../model/season\";\r\nimport { threadId } from \"worker_threads\";\r\n\r\nconst relationship = (hero: Houseguest, villain: Houseguest) =>\r\n  hero.relationships[villain.id];\r\n\r\nfunction leastFavouriteId(hero: Houseguest, options: Houseguest[]) {\r\n  // Return the ID of the houseguest that hero has the worst relationship with.\r\n  return options[lowestScore(hero, options, relationship)].id;\r\n}\r\n\r\nfunction favouriteIndex(hero: Houseguest, options: Houseguest[]) {\r\n  // Return the index of the houseguest that hero has the worst relationship with.\r\n  return highestScore(hero, options, relationship);\r\n}\r\n\r\nfunction highestScore(\r\n  hero: Houseguest,\r\n  options: Houseguest[],\r\n  callback: (hero: Houseguest, villain: Houseguest) => number\r\n) {\r\n  let highestIndex = 0;\r\n  let highestScore = -Infinity;\r\n  options.forEach((villain, i) => {\r\n    const currentScore = callback(hero, villain);\r\n    if (currentScore > highestScore) {\r\n      highestIndex = i;\r\n      highestScore = currentScore;\r\n    }\r\n  });\r\n  return highestIndex;\r\n}\r\nfunction lowestScore(\r\n  hero: Houseguest,\r\n  options: Houseguest[],\r\n  callback: (hero: Houseguest, villain: Houseguest) => number\r\n) {\r\n  let lowestIndex = 0;\r\n  let lowestScore = Infinity;\r\n  options.forEach((villain, i) => {\r\n    const currentScore = callback(hero, villain);\r\n    if (currentScore < lowestScore) {\r\n      lowestIndex = i;\r\n      lowestScore = currentScore;\r\n    }\r\n  });\r\n  return lowestIndex;\r\n}\r\n\r\nfunction juryEquity(\r\n  hero: Houseguest,\r\n  villain: Houseguest,\r\n  gameState: GameState\r\n): number {\r\n  const jurors = getJurors(gameState);\r\n  const juryWeight = jurors.length / getJuryCount();\r\n  const houseWeight = 1 - juryWeight;\r\n  // TODO: linear weighting please - strength of relationship doesn't really matter on jury anymore, now does it?\r\n  const juryScore = calculatePopularity(villain, jurors);\r\n  const houseScore = calculatePopularity(\r\n    villain,\r\n    exclude(nonEvictedHouseguests(gameState), [hero])\r\n  );\r\n  return juryScore * juryWeight + houseScore * houseWeight;\r\n}\r\n\r\nfunction threatScore(\r\n  hero: Houseguest,\r\n  villain: Houseguest,\r\n  gameState: GameState\r\n): number {\r\n  // A higher number represents a higher threat score.\r\n  // A negative number represents someone who is not a threat.\r\n  // FIXME: It's not working properly. Even in final 3 people aren't thinking strainght.\r\n  const juryThreatWeight = inJury(gameState)\r\n    ? ((getJurors(gameState).length + 1) / finalJurySize()) *\r\n      (1 - hero.relativePopularity)\r\n    : 0;\r\n  const jEquity = juryEquity(hero, villain, gameState);\r\n  // TODO: make it so popular people don't appreciate jury threat level as much until the end\r\n  return (\r\n    juryThreatWeight * jEquity +\r\n    (1 - juryThreatWeight) * -relationship(hero, villain)\r\n  );\r\n}\r\n\r\nexport function castEvictionVote(\r\n  hero: Houseguest,\r\n  nominees: Houseguest[],\r\n  gameState: GameState\r\n): number {\r\n  // Return the index of the eviction target.\r\n  const callback = (hero: Houseguest, villain: Houseguest) =>\r\n    threatScore(hero, villain, gameState);\r\n\r\n  return highestScore(hero, nominees, callback);\r\n}\r\n\r\nexport function nominatePlayer(\r\n  hero: Houseguest,\r\n  options: Houseguest[],\r\n  gameState: GameState\r\n): number {\r\n  // returns the id of a nominee\r\n  const callback = (hero: Houseguest, villain: Houseguest) =>\r\n    threatScore(hero, villain, gameState);\r\n  return options[highestScore(hero, options, callback)].id;\r\n}\r\n\r\nexport function useGoldenVeto(\r\n  hero: Houseguest,\r\n  nominees: Houseguest[],\r\n  gameState: GameState\r\n): Houseguest | null {\r\n  let povTarget: Houseguest | null = null;\r\n  if (hero.id == nominees[0].id || hero.id == nominees[1].id) {\r\n    povTarget = hero;\r\n  } else {\r\n    // incredibly basic veto logic - veto people that are not a threat to me.\r\n    // probably results in the veto almost always getting used, but can result\r\n    // in some fun situations where someone keeps saving an unpopular friend.\r\n    let save = -1;\r\n    const threat0 = threatScore(hero, nominees[0], gameState);\r\n    const threat1 = threatScore(hero, nominees[1], gameState);\r\n    if (threat0 < 0 || threat1 < 0) {\r\n      save = Math.min(threat0, threat1) === threat0 ? 0 : 1;\r\n    }\r\n    if (nonEvictedHouseguests(gameState).length !== 4 && save > -1) {\r\n      povTarget = nominees[save];\r\n    }\r\n  }\r\n  return povTarget;\r\n}\r\n\r\nexport function castJuryVote(\r\n  juror: Houseguest,\r\n  finalists: Houseguest[]\r\n): number {\r\n  return favouriteIndex(juror, finalists);\r\n}\r\n","import { Houseguest } from \"./houseguest\";\r\nimport { PlayerProfile } from \"./playerProfile\";\r\nimport _ from \"lodash\";\r\nimport { newRelationshipMap, rng } from \"../utils\";\r\nimport { getJuryCount, getFinalists } from \"./season\";\r\n\r\nexport function getById(gameState: GameState, id: number): Houseguest {\r\n  const result = gameState.houseguests.find(hg => hg.id === id);\r\n  if (!result) {\r\n    throw new Error(`Failed to find houseguest with id ${id}`);\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function exclude(inclusions: Houseguest[], exclusions: Houseguest[]) {\r\n  const excludedIds = exclusions.map(hg => hg.id);\r\n  return inclusions.filter(hg => !excludedIds.includes(hg.id) && !hg.isEvicted);\r\n}\r\n\r\nexport function randomPlayer(\r\n  inclusions: Houseguest[],\r\n  exclusions: Houseguest[] = []\r\n): Houseguest {\r\n  if (inclusions.length === 0) {\r\n    throw new Error(\"Tried to get a random player from a list of 0 players.\");\r\n  }\r\n  const options = exclude(inclusions, exclusions);\r\n  const choice = rng().randomInt(0, options.length - 1);\r\n\r\n  return options[choice];\r\n}\r\n\r\nexport function nonEvictedHouseguests(gameState: GameState) {\r\n  return gameState.houseguests.filter(hg => !hg.isEvicted);\r\n}\r\nexport function getJurors(gameState: GameState) {\r\n  return gameState.houseguests.filter(hg => hg.isJury);\r\n}\r\n\r\nexport function inJury(gameState: GameState): Boolean {\r\n  return gameState.remainingPlayers - getFinalists() <= getJuryCount();\r\n}\r\n\r\nfunction extremeValues(x: number): number {\r\n  const xSquared = x * x;\r\n  if (x >= 0) {\r\n    return -xSquared + 2 * x;\r\n  } else {\r\n    return xSquared + 2 * x;\r\n  }\r\n}\r\n\r\nexport function calculatePopularity(hero: Houseguest, house: Houseguest[]) {\r\n  let sum = 0;\r\n  let count = 0;\r\n  const targetId = hero.id;\r\n  house.forEach(houseguest => {\r\n    if (houseguest.id !== targetId) {\r\n      count++;\r\n      sum += houseguest.relationships[targetId];\r\n    }\r\n  });\r\n  return extremeValues(count === 0 ? 0 : sum / count);\r\n}\r\n\r\nexport class GameState {\r\n  // Current state of the game after a phase.\r\n\r\n  readonly houseguests: Houseguest[] = [];\r\n  readonly remainingPlayers: number = 0;\r\n  readonly phase: number = 0;\r\n  readonly previousHOH?: Houseguest;\r\n\r\n  public constructor(init: PlayerProfile[] | GameState) {\r\n    if (!(init instanceof Array)) {\r\n      Object.assign(this, init);\r\n    } else {\r\n      const profiles = init as PlayerProfile[];\r\n      this.remainingPlayers = profiles.length;\r\n      let id = -1;\r\n      profiles.forEach(profile => {\r\n        this.houseguests.push(\r\n          new Houseguest({\r\n            ...profile,\r\n            isEvicted: false,\r\n            isJury: false,\r\n            id: ++id,\r\n            nominations: 0,\r\n            hohWins: 0,\r\n            povWins: 0,\r\n            popularity: 0,\r\n            relativePopularity: 0,\r\n            deltaPopularity: 0,\r\n            relationships: newRelationshipMap(profiles.length, id)\r\n          })\r\n        );\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport class MutableGameState {\r\n  public houseguests: Houseguest[] = [];\r\n  public remainingPlayers: number = 0;\r\n  public phase: number = 0;\r\n  public previousHOH?: Houseguest;\r\n\r\n  public constructor(init: GameState | MutableGameState) {\r\n    const copy = _.cloneDeep(init);\r\n    Object.assign(this, copy);\r\n  }\r\n}\r\n","import { BigBrotherVanilla } from \"./episode/bigBrotherEpisode\";\r\nimport { EpisodeFactory } from \"./episode/episodeFactory\";\r\nimport { GameState } from \"./gameState\";\r\nimport { EpisodeType, Episode } from \".\";\r\nimport { BigBrotherFinale } from \"./episode/bigBrotherFinale\";\r\nimport { cast$ } from \"../components/mainPage/mainPageController\";\r\n\r\nexport function getJuryCount() {\r\n  return jurors;\r\n}\r\n\r\nlet jurors = 7;\r\nconst maxJurors = 7;\r\nconst sub = cast$.subscribe({\r\n  next: newCast => {\r\n    let players = newCast.length;\r\n    if (players % 2 === 0) {\r\n      players--;\r\n    }\r\n    players -= 2;\r\n    jurors = Math.min(players, maxJurors);\r\n  }\r\n});\r\n\r\nexport function getFinalists() {\r\n  return 2;\r\n}\r\n\r\nexport class Season {\r\n  private factory: EpisodeFactory;\r\n\r\n  public constructor() {\r\n    this.factory = new EpisodeFactory();\r\n  }\r\n\r\n  // In the future, this would all be customizable,\r\n  // and not just all big brother episodes by default.\r\n\r\n  public renderEpisode(gameState: GameState, type: EpisodeType): Episode {\r\n    return this.factory.nextEpisode(gameState, type);\r\n  }\r\n\r\n  public whichEpisodeType(players: number) {\r\n    if (players === 3) {\r\n      return BigBrotherFinale;\r\n    }\r\n    return BigBrotherVanilla;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Episode, GameState, randomPlayer } from \"..\";\r\nimport { MemoryWall } from \"../../components/memoryWall\";\r\nimport { NextEpisodeButton } from \"../../components/buttons/nextEpisodeButton\";\r\nimport { EpisodeType, Scene } from \"./episodes\";\r\nimport { Houseguest } from \"../houseguest\";\r\nimport _, { shuffle } from \"lodash\";\r\nimport {\r\n  MutableGameState,\r\n  getById,\r\n  nonEvictedHouseguests,\r\n  exclude\r\n} from \"../gameState\";\r\nimport { Portraits, Portrait } from \"../../components/playerPortrait/portraits\";\r\nimport { getJuryCount, getFinalists } from \"../season\";\r\nimport {\r\n  castEvictionVote,\r\n  nominatePlayer,\r\n  useGoldenVeto\r\n} from \"../../utils/aiUtils\";\r\n\r\nexport const BigBrotherVanilla: EpisodeType = {\r\n  canPlayWith: (n: number) => {\r\n    return n > 1;\r\n  },\r\n  eliminates: 1\r\n};\r\n\r\n// TODO: Refactoring ideas\r\n/**\r\n * Might be best to start passing ids instead of houseguests for HoH/nominees/veto winner\r\n */\r\n\r\nfunction generateHohCompScene(\r\n  initialGameState: GameState\r\n): [GameState, Scene, Houseguest] {\r\n  const newGameState = new MutableGameState(initialGameState);\r\n\r\n  const previousHoh = initialGameState.previousHOH\r\n    ? [initialGameState.previousHOH]\r\n    : [];\r\n  const newHoH: Houseguest = randomPlayer(\r\n    newGameState.houseguests,\r\n    previousHoh\r\n  );\r\n  newGameState.previousHOH = newHoH;\r\n  newGameState.phase++;\r\n  newHoH.hohWins += 1;\r\n\r\n  const scene = {\r\n    title: \"HoH Competition\",\r\n    gameState: initialGameState,\r\n    render: (\r\n      <div>\r\n        {previousHoh.length > 0 &&\r\n          `Houseguests, it's time to find a new Head of Household. As outgoing HoH, ${\r\n            previousHoh[0].name\r\n          } will not compete. `}\r\n        <Portrait houseguest={newHoH} />\r\n        {newHoH.name} has won Head of Household!\r\n        <br />\r\n        <NextEpisodeButton />\r\n      </div>\r\n    )\r\n  };\r\n\r\n  return [new GameState(newGameState), scene, newHoH];\r\n}\r\n\r\nfunction generateNomCeremonyScene(\r\n  initialGameState: GameState,\r\n  HoH: Houseguest\r\n): [GameState, Scene, Houseguest[]] {\r\n  const newGameState = new MutableGameState(initialGameState);\r\n  const options = nonEvictedHouseguests(newGameState);\r\n  const nom1 = getById(\r\n    newGameState,\r\n    nominatePlayer(HoH, exclude(options, [HoH]), newGameState)\r\n  );\r\n  const nom2 = getById(\r\n    newGameState,\r\n    nominatePlayer(HoH, exclude(options, [HoH, nom1]), newGameState)\r\n  );\r\n\r\n  nom1.nominations++;\r\n  nom2.nominations++;\r\n\r\n  const noms = shuffle([nom1, nom2]);\r\n\r\n  const scene = {\r\n    title: \"Nomination Ceremony\",\r\n    gameState: newGameState,\r\n    render: (\r\n      <div>\r\n        <Portrait houseguest={HoH} />\r\n        <br />\r\n        This is the nomination ceremony. It is my responsibility as the Head of\r\n        Household to nominate two houseguests for eviction.\r\n        <br />\r\n        <b>\r\n          My first nominee is...\r\n          <br />\r\n          <Portrait houseguest={noms[0]} />\r\n          <br />\r\n          My second nominee is...\r\n          <br />\r\n          <Portrait houseguest={noms[1]} />\r\n          {`I have nominated you, ${noms[0].name} and you, ${\r\n            noms[1].name\r\n          } for eviction.`}\r\n          <br />\r\n        </b>\r\n        <NextEpisodeButton />\r\n      </div>\r\n    )\r\n  };\r\n  return [new GameState(newGameState), scene, [nom1, nom2]];\r\n}\r\n\r\nfunction generateVetoCompScene(\r\n  initialGameState: GameState,\r\n  HoH: Houseguest,\r\n  nom1: Houseguest,\r\n  nom2: Houseguest\r\n): [GameState, Scene, Houseguest] {\r\n  const newGameState = new MutableGameState(initialGameState);\r\n\r\n  // pick players\r\n  const choices = nonEvictedHouseguests(newGameState);\r\n  let povPlayers: Houseguest[] = [];\r\n  const everyoneWillPlay = choices.length <= 6;\r\n\r\n  if (everyoneWillPlay) {\r\n    povPlayers.push({ ...HoH });\r\n    povPlayers.push({ ...nom1 });\r\n    povPlayers.push({ ...nom2 });\r\n    while (povPlayers.length < choices.length) {\r\n      povPlayers.push({ ...randomPlayer(choices, povPlayers) });\r\n    }\r\n  } else {\r\n    // TODO: houseguests choice picks\r\n    povPlayers.push({ ...HoH });\r\n    povPlayers.push({ ...nom1 });\r\n    povPlayers.push({ ...nom2 });\r\n    povPlayers.push({ ...randomPlayer(choices, povPlayers) });\r\n    povPlayers.push({ ...randomPlayer(choices, povPlayers) });\r\n    povPlayers.push({ ...randomPlayer(choices, povPlayers) });\r\n  }\r\n  let povWinner = randomPlayer(povPlayers);\r\n  povWinner = getById(newGameState, povWinner.id);\r\n  povWinner.povWins++;\r\n\r\n  let introText: string;\r\n  if (everyoneWillPlay) {\r\n    introText = \"Everyone left in the house will compete in this challenge.\";\r\n  } else {\r\n    introText = `${HoH.name}, as Head of Household, and ${nom1.name} and ${\r\n      nom2.name\r\n    } as nominees, will compete, as well as 3 others chosen by random draw.`;\r\n  }\r\n\r\n  const extras = [povPlayers[3]];\r\n  povPlayers[4] && extras.push(povPlayers[4]);\r\n  povPlayers[5] && extras.push(povPlayers[5]);\r\n\r\n  const scene = {\r\n    title: \"Veto Competition\",\r\n    gameState: initialGameState,\r\n    render: (\r\n      <div>\r\n        It's time to pick players for the veto competition.\r\n        <br />\r\n        <Portraits houseguests={[HoH, nom1, nom2]} />\r\n        <br />\r\n        {introText}\r\n        <br />\r\n        <Portraits houseguests={extras} />\r\n        ...\r\n        <Portraits houseguests={[povWinner]} />\r\n        {`${povWinner.name} has won the Golden Power of Veto!`}\r\n        <br />\r\n        <NextEpisodeButton />\r\n      </div>\r\n    )\r\n  };\r\n\r\n  return [new GameState(newGameState), scene, povWinner];\r\n}\r\n\r\nfunction generateVetoCeremonyScene(\r\n  initialGameState: GameState,\r\n  HoH: Houseguest,\r\n  initialNominees: Houseguest[],\r\n  povWinner: Houseguest\r\n): [Scene, Houseguest[]] {\r\n  let povTarget: Houseguest | null = null;\r\n  let descisionText = \"\";\r\n  initialNominees[0] = getById(initialGameState, initialNominees[0].id);\r\n  initialNominees[1] = getById(initialGameState, initialNominees[1].id);\r\n  HoH = getById(initialGameState, HoH.id);\r\n\r\n  povTarget = useGoldenVeto(povWinner, initialNominees, initialGameState);\r\n\r\n  if (!povTarget) {\r\n    descisionText += \"... not to use the power of veto.\";\r\n  } else if (\r\n    povWinner.id == initialNominees[0].id ||\r\n    povWinner.id == initialNominees[1].id\r\n  ) {\r\n    descisionText += \"...to use the power of veto on myself.\";\r\n  } else {\r\n    descisionText += `...to use the power of veto on ${povTarget.name}.`;\r\n  }\r\n\r\n  let replacementSpeech = \"\";\r\n  let nameAReplacement = \"\";\r\n  let finalNominees = initialNominees;\r\n  if (povTarget) {\r\n    finalNominees = initialNominees.filter(hg => hg.id != povTarget!.id);\r\n    nameAReplacement += ` ${\r\n      HoH.name\r\n    }, since I have just vetoed one of your nominations, you must name a replacement nominee.`;\r\n    const replacementNom = {\r\n      ...getById(\r\n        initialGameState,\r\n        nominatePlayer(\r\n          HoH,\r\n          exclude(initialGameState.houseguests, [\r\n            HoH,\r\n            initialNominees[0],\r\n            initialNominees[1],\r\n            povWinner\r\n          ]),\r\n          initialGameState\r\n        )\r\n      )\r\n    };\r\n    replacementNom.nominations++;\r\n    finalNominees.push(replacementNom);\r\n    getById(initialGameState, replacementNom.id).nominations++;\r\n    replacementSpeech = `My replacement nominee is ${replacementNom.name}.`;\r\n  }\r\n\r\n  const scene = {\r\n    title: \"Veto Ceremony\",\r\n    gameState: initialGameState,\r\n    render: (\r\n      <div>\r\n        This is the Veto Ceremony.\r\n        <br />\r\n        {`${initialNominees[0].name} and ${\r\n          initialNominees[1].name\r\n        } have been nominated for eviction.`}\r\n        <Portraits houseguests={initialNominees} />\r\n        But I have the power to veto one of these nominations.\r\n        <br />\r\n        <b>\r\n          I have decided...\r\n          <Portrait houseguest={povWinner} />\r\n          {descisionText}\r\n        </b>\r\n        {nameAReplacement}\r\n        {replacementSpeech && <Portrait houseguest={HoH} />}\r\n        <b>{replacementSpeech}</b>\r\n        <Portraits houseguests={finalNominees} />\r\n        <NextEpisodeButton />\r\n      </div>\r\n    )\r\n  };\r\n  return [scene, finalNominees];\r\n}\r\n\r\nexport function evictHouseguest(gameState: MutableGameState, id: number) {\r\n  const houseguest = getById(gameState, id);\r\n  houseguest.isEvicted = true;\r\n  if (gameState.remainingPlayers - getFinalists() <= getJuryCount()) {\r\n    houseguest.isJury = true;\r\n  }\r\n  gameState.remainingPlayers--;\r\n}\r\n\r\nfunction generateEvictionScene(\r\n  initialGameState: GameState,\r\n  HoH: Houseguest,\r\n  nominees: Houseguest[]\r\n): [GameState, Scene] {\r\n  const newGameState = new MutableGameState(initialGameState);\r\n  nominees = shuffle(nominees);\r\n  const votes: Array<Houseguest[]> = [[], []];\r\n  nonEvictedHouseguests(newGameState).forEach(hg => {\r\n    if (\r\n      hg.id !== nominees[0].id &&\r\n      hg.id !== nominees[1].id &&\r\n      hg.id !== HoH.id\r\n    ) {\r\n      votes[castEvictionVote(hg, nominees, newGameState)].push(hg);\r\n    }\r\n  });\r\n  const votesFor0 = votes[0].length;\r\n  const votesFor1 = votes[1].length;\r\n\r\n  let tieVote = votesFor0 === votesFor1;\r\n  let tieBreaker: number = 0;\r\n  if (tieVote) {\r\n    tieBreaker = castEvictionVote(HoH, nominees, newGameState);\r\n  }\r\n  let evictee: Houseguest;\r\n  if (votesFor0 > votesFor1) {\r\n    evictee = nominees[0];\r\n  } else if (votesFor1 > votesFor0) {\r\n    evictee = nominees[1];\r\n  } else {\r\n    evictee = nominees[tieBreaker];\r\n  }\r\n  evictHouseguest(newGameState, evictee.id);\r\n\r\n  const isUnanimous = votesFor0 === 0 || votesFor1 === 0;\r\n  const voteCountText = isUnanimous\r\n    ? \"By a unanimous vote...\"\r\n    : `By a vote of ${votesFor0} to ${votesFor1}...`;\r\n\r\n  const scene = {\r\n    title: \"Live Eviction\",\r\n    gameState: initialGameState,\r\n    render: (\r\n      <div>\r\n        <p style={{ textAlign: \"center\" }}>\r\n          <b>{voteCountText} </b>\r\n        </p>\r\n        <div className=\"columns is-centered\">\r\n          <div className=\"column box\">\r\n            <Portraits houseguests={votes[0]} centered={true} />\r\n          </div>\r\n          <div className=\"column box\">\r\n            <Portraits houseguests={votes[1]} centered={true} />\r\n          </div>\r\n        </div>\r\n        {tieVote && (\r\n          <div>\r\n            <p style={{ textAlign: \"center\" }}>\r\n              <b> We have a tie.</b> <br />\r\n              {`${\r\n                HoH.name\r\n              }, as current Head of Household, you must cast the sole vote to evict.`}\r\n            </p>\r\n            <Portraits houseguests={[HoH]} centered={true} />\r\n            <p style={{ textAlign: \"center\" }}>\r\n              <b>I vote to evict {`${evictee.name}.`}</b>\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        <Portraits\r\n          houseguests={[\r\n            getById(newGameState, nominees[0].id),\r\n            getById(newGameState, nominees[1].id)\r\n          ]}\r\n          centered={true}\r\n        />\r\n        <p style={{ textAlign: \"center\" }}>\r\n          <b>\r\n            {`${\r\n              evictee.name\r\n            }... you have been evicted from the Big Brother House.`}\r\n          </b>\r\n        </p>\r\n        <NextEpisodeButton />\r\n      </div>\r\n    )\r\n  };\r\n  return [newGameState, scene];\r\n}\r\n\r\nexport class BigBrotherVanillaEpisode implements Episode {\r\n  readonly title: string;\r\n  readonly scenes: Scene[] = [];\r\n  readonly render: JSX.Element;\r\n  readonly gameState: GameState;\r\n  readonly type = BigBrotherVanilla;\r\n\r\n  public constructor(initialGameState: GameState) {\r\n    let currentGameState;\r\n    let hohCompScene;\r\n    let hoh: Houseguest;\r\n\r\n    [currentGameState, hohCompScene, hoh] = generateHohCompScene(\r\n      initialGameState\r\n    );\r\n    this.scenes.push(hohCompScene);\r\n\r\n    let nomCeremonyScene;\r\n    let nominees: Houseguest[];\r\n    [currentGameState, nomCeremonyScene, nominees] = generateNomCeremonyScene(\r\n      currentGameState,\r\n      hoh\r\n    );\r\n    this.scenes.push(nomCeremonyScene);\r\n\r\n    let vetoCompScene;\r\n    let povWinner: Houseguest;\r\n    [currentGameState, vetoCompScene, povWinner] = generateVetoCompScene(\r\n      currentGameState,\r\n      hoh,\r\n      nominees[0],\r\n      nominees[1]\r\n    );\r\n    this.scenes.push(vetoCompScene);\r\n    let vetoCeremonyScene;\r\n\r\n    [vetoCeremonyScene, nominees] = generateVetoCeremonyScene(\r\n      currentGameState,\r\n      hoh,\r\n      nominees,\r\n      povWinner\r\n    );\r\n    this.scenes.push(vetoCeremonyScene);\r\n\r\n    let evictionScene;\r\n    [currentGameState, evictionScene] = generateEvictionScene(\r\n      currentGameState,\r\n      hoh,\r\n      nominees\r\n    );\r\n    this.scenes.push(evictionScene);\r\n\r\n    this.title = `Week ${currentGameState.phase}`;\r\n    this.render = (\r\n      <div>\r\n        {/* TODO: custom title here*/}\r\n        {`Week ${currentGameState.phase}`}\r\n        <MemoryWall houseguests={initialGameState.houseguests} /> <br />\r\n        <NextEpisodeButton />\r\n      </div>\r\n    );\r\n    this.gameState = new GameState(currentGameState);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { EpisodeType, Episode, Scene } from \"./episodes\";\r\nimport { GameState } from \"..\";\r\nimport { MemoryWall } from \"../../components/memoryWall\";\r\nimport { NextEpisodeButton } from \"../../components/buttons/nextEpisodeButton\";\r\nimport { Houseguest } from \"../houseguest\";\r\nimport {\r\n  nonEvictedHouseguests,\r\n  MutableGameState,\r\n  randomPlayer,\r\n  getById,\r\n  getJurors\r\n} from \"../gameState\";\r\nimport { Portraits, Portrait } from \"../../components/playerPortrait/portraits\";\r\nimport { castEvictionVote, castJuryVote } from \"../../utils/aiUtils\";\r\nimport { evictHouseguest } from \"./bigBrotherEpisode\";\r\nimport { rng } from \"../../utils\";\r\n\r\nexport const BigBrotherFinale: EpisodeType = {\r\n  canPlayWith: (n: number) => n === 3,\r\n  eliminates: 2\r\n};\r\n\r\nfunction finalHohCompScene(\r\n  initialGameState: GameState\r\n): [GameState, Scene, Houseguest] {\r\n  const newGameState = new MutableGameState(initialGameState);\r\n  const final3 = nonEvictedHouseguests(initialGameState);\r\n  const enduranceWinner = randomPlayer(final3);\r\n  const enduranceLosers = final3.filter(hg => hg.id !== enduranceWinner.id);\r\n  const skillWinner = randomPlayer(final3, [enduranceWinner]);\r\n  const finalHoH = getById(\r\n    newGameState,\r\n    randomPlayer([enduranceWinner, skillWinner]).id\r\n  );\r\n  finalHoH.hohWins++;\r\n  const scene: Scene = {\r\n    title: \"Final HoH Competition\",\r\n    gameState: newGameState,\r\n    render: (\r\n      <div>\r\n        <p>The final 3 houseguests compete in the endurance competition.</p>\r\n        <Portraits houseguests={final3} />\r\n        <Portrait houseguest={enduranceWinner} />\r\n        <p>\r\n          <b>{`${enduranceWinner.name} has won the endurance competition!`}</b>\r\n        </p>\r\n        <hr />\r\n        <p>{`${enduranceLosers[0].name} and ${\r\n          enduranceLosers[1].name\r\n        } compete in the skill competition.`}</p>\r\n        <Portraits houseguests={enduranceLosers} />\r\n        <Portrait houseguest={skillWinner} />\r\n        <p>\r\n          <b>{`${skillWinner.name} has won the skill competition!`}</b>\r\n        </p>\r\n        <hr />\r\n        <p>{`${enduranceWinner.name} and ${\r\n          skillWinner.name\r\n        } compete in the quiz competition.`}</p>\r\n        <Portraits houseguests={[enduranceWinner, skillWinner]} />\r\n        <Portrait houseguest={finalHoH} />\r\n        <p>\r\n          <b>{`Congratulations ${\r\n            finalHoH.name\r\n          }, you are the final Head of Household!`}</b>\r\n        </p>\r\n        <NextEpisodeButton />\r\n      </div>\r\n    )\r\n  };\r\n  newGameState.phase++;\r\n  return [new GameState(newGameState), scene, finalHoH];\r\n}\r\n\r\nfunction finalEvictionScene(\r\n  initialGameState: GameState,\r\n  HoH: Houseguest\r\n): [GameState, Scene] {\r\n  const newGameState = new MutableGameState(initialGameState);\r\n  const nominees = nonEvictedHouseguests(newGameState).filter(\r\n    hg => hg.id !== HoH.id\r\n  );\r\n  const vote = castEvictionVote(HoH, nominees, newGameState);\r\n  const evictee = nominees[vote];\r\n  evictHouseguest(newGameState, evictee.id);\r\n  const scene: Scene = {\r\n    title: \"Final Eviction\",\r\n    gameState: newGameState,\r\n    render: (\r\n      <div>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          {`As the final HoH of the season, ${\r\n            HoH.name\r\n          }, you may now cast the sole vote to evict.`}\r\n          <Portrait houseguest={HoH} centered={true} />\r\n          <b>\r\n            <p>{`I vote to evict ${evictee.name}.`}</p>\r\n          </b>\r\n          <Portraits houseguests={nominees} centered={true} />\r\n          <p>\r\n            It's official... {evictee.name}, you will be the final person\r\n            leaving the Big Brother House.\r\n          </p>\r\n        </div>\r\n        <NextEpisodeButton />\r\n      </div>\r\n    )\r\n  };\r\n  return [new GameState(newGameState), scene];\r\n}\r\n\r\nfunction juryVoteScene(initialGameState: GameState): Scene {\r\n  const jurors = getJurors(initialGameState);\r\n  const finalists = nonEvictedHouseguests(initialGameState);\r\n  let voteCount = [0, 0];\r\n  const votes = jurors.map(juror => {\r\n    const result = castJuryVote(juror, finalists);\r\n    voteCount[result]++;\r\n    return result;\r\n  });\r\n  const voteBlocks = [];\r\n\r\n  // TODO: the formatting on this episode sucks...\r\n  for (let i = 0; i < votes.length; i++) {\r\n    voteBlocks.push(\r\n      <div className=\"columns\" key={`jury-vote${i}`}>\r\n        <Portrait houseguest={jurors[i]} />\r\n        <p>\r\n          <b>{`${jurors[i].name} has voted for...`}</b>\r\n        </p>\r\n        <Portrait houseguest={finalists[votes[i]]} />\r\n      </div>\r\n    );\r\n  }\r\n  const winner = voteCount[0] > voteCount[1] ? finalists[0] : finalists[1];\r\n\r\n  const scene: Scene = {\r\n    title: \"Jury Votes\",\r\n    gameState: initialGameState,\r\n    render: (\r\n      <div>\r\n        {voteBlocks}\r\n        <Portrait houseguest={winner} />\r\n        {`Congratulations, ${\r\n          winner.name\r\n        }, you are the winner of Big Brother!!!`}\r\n      </div>\r\n    )\r\n  };\r\n  return scene;\r\n}\r\n\r\nexport class BigBrotherFinaleEpisode implements Episode {\r\n  readonly title: string;\r\n  readonly scenes: Scene[] = [];\r\n  readonly render: JSX.Element;\r\n  readonly gameState: GameState;\r\n  readonly type = BigBrotherFinale;\r\n\r\n  public constructor(initialGameState: GameState) {\r\n    this.title = \"Finale\";\r\n    this.render = (\r\n      <div>\r\n        {/* TODO: custom title here*/}\r\n        Finale Night\r\n        <MemoryWall houseguests={initialGameState.houseguests} /> <br />\r\n        <NextEpisodeButton />\r\n      </div>\r\n    );\r\n    let currentGameState;\r\n    let hohCompScene;\r\n    let finalHoH;\r\n    [currentGameState, hohCompScene, finalHoH] = finalHohCompScene(\r\n      initialGameState\r\n    );\r\n    this.scenes.push(hohCompScene);\r\n    let finalEviction;\r\n    [currentGameState, finalEviction] = finalEvictionScene(\r\n      currentGameState,\r\n      finalHoH\r\n    );\r\n    this.scenes.push(finalEviction);\r\n\r\n    let voteScene;\r\n    voteScene = juryVoteScene(currentGameState);\r\n    this.scenes.push(voteScene);\r\n\r\n    // declare the winner! And don't add a next episode button.\r\n    this.gameState = currentGameState;\r\n  }\r\n}\r\n","export class PriorityQueue {\r\n  parent = (i: number) => ((i + 1) >>> 1) - 1;\r\n  left = (i: number) => (i << 1) + 1;\r\n  right = (i: number) => (i + 1) << 1;\r\n  _heap: any[];\r\n  _comparator: (a: any, b: any) => boolean;\r\n  constructor(comparator = (a: any, b: any) => a > b) {\r\n    this._heap = [];\r\n    this._comparator = comparator;\r\n  }\r\n  size() {\r\n    return this._heap.length;\r\n  }\r\n  isEmpty() {\r\n    return this.size() == 0;\r\n  }\r\n  peek() {\r\n    return this._heap[0];\r\n  }\r\n  push(...values: any[]) {\r\n    values.forEach(value => {\r\n      this._heap.push(value);\r\n      this._siftUp();\r\n    });\r\n    return this.size();\r\n  }\r\n  pop() {\r\n    const poppedValue = this.peek();\r\n    const bottom = this.size() - 1;\r\n    if (bottom > 0) {\r\n      this._swap(0, bottom);\r\n    }\r\n    this._heap.pop();\r\n    this._siftDown();\r\n    return poppedValue;\r\n  }\r\n  replace(value: any) {\r\n    const replacedValue = this.peek();\r\n    this._heap[0] = value;\r\n    this._siftDown();\r\n    return replacedValue;\r\n  }\r\n  _greater(i: number, j: number) {\r\n    return this._comparator(this._heap[i], this._heap[j]);\r\n  }\r\n  _swap(i: number, j: number) {\r\n    [this._heap[i], this._heap[j]] = [this._heap[j], this._heap[i]];\r\n  }\r\n  _siftUp() {\r\n    let node = this.size() - 1;\r\n    while (node > 0 && this._greater(node, this.parent(node))) {\r\n      this._swap(node, this.parent(node));\r\n      node = this.parent(node);\r\n    }\r\n  }\r\n  _siftDown() {\r\n    let node = 0;\r\n    while (\r\n      (this.left(node) < this.size() && this._greater(this.left(node), node)) ||\r\n      (this.right(node) < this.size() && this._greater(this.right(node), node))\r\n    ) {\r\n      let maxChild =\r\n        this.right(node) < this.size() &&\r\n        this._greater(this.right(node), this.left(node))\r\n          ? this.right(node)\r\n          : this.left(node);\r\n      this._swap(node, maxChild);\r\n      node = maxChild;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  GameState,\r\n  MutableGameState,\r\n  calculatePopularity,\r\n  nonEvictedHouseguests\r\n} from \"../gameState\";\r\nimport { Episode, Houseguest } from \"..\";\r\nimport { EpisodeType } from \"./episodes\";\r\nimport {\r\n  BigBrotherVanilla,\r\n  BigBrotherVanillaEpisode\r\n} from \"./bigBrotherEpisode\";\r\nimport { BigBrotherFinale, BigBrotherFinaleEpisode } from \"./bigBrotherFinale\";\r\nimport { rng, roundTwoDigits } from \"../../utils\";\r\nimport { PriorityQueue } from \"../../utils/heap\";\r\n\r\nfunction firstImpressions(houseguests: Houseguest[]) {\r\n  for (let i = 0; i < houseguests.length; i++) {\r\n    const iMap = houseguests[i].relationships;\r\n    for (let j = i + 1; j < houseguests.length; j++) {\r\n      // creates a bunch of 100% random mutual relationships\r\n      const jMap = houseguests[j].relationships;\r\n      const impression = rng().randomFloat();\r\n      jMap[i] = impression;\r\n      iMap[j] = impression;\r\n    }\r\n  }\r\n}\r\n\r\nfunction updatePopularity(gameState: GameState) {\r\n  const houseguests = nonEvictedHouseguests(gameState);\r\n  const heap = new PriorityQueue((a, b) => a.popularity > b.popularity);\r\n  houseguests.forEach(hg => {\r\n    const result = calculatePopularity(hg, nonEvictedHouseguests(gameState));\r\n    hg.deltaPopularity =\r\n      (roundTwoDigits(result) - roundTwoDigits(hg.popularity)) / 100;\r\n    hg.popularity = result;\r\n    heap.push(hg);\r\n  });\r\n  const houseSize = heap.size();\r\n  while (heap.size() > 0) {\r\n    const currentHg = heap.pop();\r\n    // TODO: change this into relative equity.\r\n    currentHg.relativePopularity = (heap.size() + 1) / houseSize;\r\n  }\r\n}\r\n\r\nexport class EpisodeFactory {\r\n  public nextEpisode(gameState: GameState, episodeType: EpisodeType): Episode {\r\n    let newState = new MutableGameState(gameState);\r\n    if (gameState.phase === 0) {\r\n      firstImpressions(newState.houseguests);\r\n    }\r\n    updatePopularity(newState);\r\n\r\n    const finalState = new GameState(newState);\r\n    switch (episodeType) {\r\n      case BigBrotherVanilla:\r\n        return new BigBrotherVanillaEpisode(finalState);\r\n      case BigBrotherFinale:\r\n        return new BigBrotherFinaleEpisode(finalState);\r\n      default:\r\n        throw new Error(\"Unsupported Episode Type\");\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { GameState } from \"../gameState\";\r\n\r\nexport interface Episode {\r\n  readonly scenes: Scene[];\r\n  readonly title: string;\r\n  readonly render: JSX.Element;\r\n  readonly gameState: GameState;\r\n  readonly type: EpisodeType;\r\n}\r\n\r\nexport interface EpisodeType {\r\n  readonly canPlayWith: (n: number) => boolean;\r\n  readonly eliminates: number;\r\n}\r\n\r\nexport class Scene {\r\n  readonly title: string = \"\";\r\n  readonly gameState: GameState = new GameState([]);\r\n  readonly render: JSX.Element = (\r\n    <div>{`Error while rendering ${this.title}`}</div>\r\n  );\r\n  public constructor(init: Partial<Scene>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Episode, Scene, GameState } from \"../../model\";\r\nimport { SidebarController, newEpisode } from \"./sidebarController\";\r\nimport { PregameEpisode } from \"../../model/episode/pregameEpisode\";\r\ninterface SidebarState {\r\n  episodes: Episode[];\r\n  selectedScene: number;\r\n}\r\n\r\nexport class Sidebar extends React.Component<{}, SidebarState> {\r\n  private controller: SidebarController;\r\n  public constructor(props: {}) {\r\n    super(props);\r\n    this.controller = new SidebarController(this);\r\n    this.state = { episodes: [], selectedScene: 0 };\r\n    newEpisode(new PregameEpisode(new GameState([])));\r\n  }\r\n\r\n  public componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.controller.handleKeyDown);\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.controller.destroy();\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"box\" style={{ minWidth: 140 }}>\r\n        {this.getEpisodes()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private getHighlight(title: string, key: number) {\r\n    if (key === this.state.selectedScene) {\r\n      return <mark>{title}</mark>;\r\n    }\r\n    return title;\r\n  }\r\n\r\n  private getEpisodes() {\r\n    const result: JSX.Element[] = [];\r\n    // Weird OBOE to make keys start at 0\r\n    let episodeKey = -1;\r\n    let breakKey = 0;\r\n    this.state.episodes.forEach((episode: Episode) => {\r\n      const id = ++episodeKey;\r\n      result.push(\r\n        <b\r\n          key={id}\r\n          onClick={() => {\r\n            this.controller.switchToScene(id);\r\n          }}\r\n        >\r\n          {this.getHighlight(episode.title, id)}\r\n        </b>\r\n      );\r\n      result.push(<br key={--breakKey} />);\r\n      episode.scenes.forEach((scene: Scene) => {\r\n        const id = ++episodeKey;\r\n        if (this.controller.getSelectedEpisode() === episode.gameState.phase) {\r\n          result.push(\r\n            <a key={id} onClick={() => this.controller.switchToScene(id)}>\r\n              {this.getHighlight(scene.title, id)}\r\n            </a>\r\n          );\r\n          result.push(<br key={--breakKey} />);\r\n        }\r\n      });\r\n    });\r\n    return result;\r\n  }\r\n}\r\n","import \"./mainPage.scss\";\r\nimport React from \"react\";\r\nimport { Sidebar } from \"../sidebar/sidebar\";\r\nimport { Topbar } from \"../topbar/topBar\";\r\nimport { MainContentArea } from \"./mainContentArea\";\r\nimport { MainPageController } from \"./mainPageController\";\r\n\r\ninterface MainPageProps {\r\n  controller: MainPageController;\r\n}\r\n\r\nexport class MainPage extends React.Component<MainPageProps, any> {\r\n  public constructor(props: MainPageProps) {\r\n    super(props);\r\n    props.controller.inject(this);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"main-page\">\r\n        <Topbar />\r\n        <div className=\"columns\">\r\n          <div className=\"column is-narrow\">\r\n            <Sidebar />\r\n          </div>\r\n          <div className=\"column\">\r\n            <MainContentArea />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { MainPage } from \"./components/mainPage/mainPage\";\r\nimport { MainPageController } from \"./components/mainPage/mainPageController\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return <MainPage controller={new MainPageController()} />;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}